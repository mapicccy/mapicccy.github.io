<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>20220801一个奇怪的梦</title>
    <url>/posts/9ff025e4/</url>
    <content><![CDATA[<p>做梦我也被公司干掉了，不像其他人收到HRG正式谈话通知，只有小智（化名）口头说他记得也有我。</p>
<p>一开始没有当回事，因为觉得不可能自己不可能被C，晚一些的时候发现内网权限突然消失。于是联系小丁（化名）和师兄，他们都觉得非常震惊。</p>
<span id="more"></span>

<p>后面不知道咋回事，又和小智、师兄一起散步，小智问到师兄最近在干嘛，师兄毫不犹豫的回答“在找工作”。小智脸色瞬间变了。</p>
<p>在后面的事情就比较魔幻了，师兄、小雨以及我不知道怎么出现在我的徐州老家，一起围观一群人在二楼平台打羽毛球。还有人把球打到一楼去了，有人嚷嚷着去捡。我对师兄说太阳太大了，好热，于是一屁股坐在了阴凉的地方。突然发现脚上有一只巨大无比的蚂蚁，我直接把它按死在脚面上，结果蚂蚁瞬间分裂成一些不知名的昆虫，有些一根巨长的口器，一下子扎在了肉里。师兄大惊失色，说这玩意不好弄，也不要用手扣出来，会死的，唯一的办法是用火烧出来。我拿的打火机烧脚面，把口器从肉里烧出来。</p>
<p>再然后，突然就醒了。</p>
]]></content>
      <tags>
        <tag>easy</tag>
      </tags>
  </entry>
  <entry>
    <title>20220912被一个妹子吓到了</title>
    <url>/posts/57813cdd/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="edb6ee999f38fa35b3778e23e8872b67b63b5abcb032839eb95626d4da017848">4acf1acd5f14f870a242a2ef35ee6c94df13b0203927176f3d14856222925236b6111809fa043d33361601cb18c89a80b55cb0b3d29c6a882358e2ea382411471c2e08746e470860a2e29baa84920286443fe78f3dbd780eecd78bd015859fcc132cb39c7b39b6966151c5a7e88ff9063a7fbc8a89401b9324ddb1d82ce1c1e2d0c30309ab12e0d42b9cb9a15f9658cbb361b27837d0d62bcd6b74c850f2fae433dc338b6ea15652c5f26dc1ca0552ad70d0db415418215db55ebf0ac5ff76f95b504d6507b13d60e5969247a2fbb8b95ec4750120f0035898f9250521ef0bc488b28c29f98470f453268058b62b4c392f204f835fb49d51629e3fafea980bfc183d1d1693e15241b00cf8bd2dd0c79ea87f87146eabdfb99c40c63474d8d0d95ae6f61d3c8d82733fa9d9874bf6e604500a4e489395a936fa85b1a680217a7a55c1e8499386a6d9d7055080a5d12d2ec1a9f227f43a10f264be99b95f9f3e0949c1ce8e43c58218627e4ec1f02c94170035a5f95fc0877dfc0decbab5226ce674e995d513ae8b5be9a366401a88f3bcbb80deeb601d45975eb80f9762eae107ded6cd0cd1222da463dfcaec00b6956ca4b4b5001436d39d0df84cc4b0bdf5599ce83605f4815d5cfaad97498ccec6be7bddd6701430e3a818a6be38945f8c9414a8f36652f090d62ecba1013f1bfb4dbaa0a4b0410d91c0da05941717b03adaa8264df0c16ee56871c0844d178ea1c1a33f6f2c0cecc0c4aba396b10254961f8f55bbff192af4b45b06fcc761153e245d0cdc21d9bacba27aab49a4e16c212a858413fe4dd9e9b632b20800a1a8f82f6c562543f37460dd4a9de44ba6b47b3fcc0e8c5c02b9cb1b42f139d7e4726e1b2c59ea33c7b2461af64f1e157d6ad80597a4b84ffa64ae8bda4819897042cd3e553b9ea0bcd16b42d0918d1d842103939ad1ece06a3eae94f4a147d595821f9a908b47abaa780d7ad2be28a5b2b74eb7676c18cd422e2e86b7702f9a8ed17f80df9c8d3f9b0aef1af80efe0514c79a97d0d8d5a02c48ffe762c5b6d8f704cf49e64ed8c6241cb1053494c70d2af25a9f7e5963c65e1e062ac9bbac9891b060300d1030379441dcf60802de16c0bf2f0d77cc94aacf817f6d95bcc4cc4f4c0b6d32c3f3a32a23022f75dbe46169a3d146ae81e795da7a6e22504f7dfe31b8d44202e290133f5b69086a461b7f96ad80dc16a725c8dd697cf2a8e815a7da707f1f701d574c8ea4782dd66485bcf7ac62480afb24b72c7153ccf86979539860614b0aad8549614a834d8717cce5dffb414af889e12c66b95db9083dfcbb1ab3fdbf22e82fe310e651aa47eb0b963aa0fd48dbe7dbf62e10a7b02072508a07ad1bf0750acafef5d7bf5e8f5a73dd70a5b6c8bef5dbc753db345e130c22aecffd7d941b5177f095b3b2737b7abdcf0eb570d7a876506c56da369e5f52ff1d77c217baef390519bba9c7ccd9dc936d07835893</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看 | Been encrypted, click here to enter password.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>20220918回复妹子</title>
    <url>/posts/679b99cc/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="8d98825f764007abd7fbe43a3eabf1c61f96236833c77904a035e6fd3c140614">664e697e09c75cb953004f2a51a15a0763176e96f8217350f9e9bb3e012fba001ad41ae826a32187a152c8ea87189bf2ca3faa2ca8ae2adbe0119b08fa71c8d11866677e340ff3f418781015eeb87bc5c85bdc0a1d9486ed21062d51decd34bf746dd1b3bcd2589f6016fef89072c519a79200414195718e71027efd76241a0bb42fd96241ccbac9569dc8ebe97c00d91c01a565532bed58447f21c9a5a3f8e6f24e51f6d1f350e0286fb239aaa5d2035de7df92c482b340949b19f92726873158f1d5c2d0aa1008a57f6f64aeda4cabeb7988e14f55d95eecd83648646413f5f447f9fda5f70fd862fd77a90dcb1fa1321e156debc09b093fb4ee9594b6b473181fee28b82fe0bbf35fd4100b82758b01a6279cbf5ee8041068a56ec0b59a207707eb324b3f320d0c7029784bb972effabc2dfb3c441d8d03b4211c9b9075930b10203862519a712908a5735f7ad733f390a934f5b0a48bf49a75cd33aa0758991c8d506238c0ec6c55da1de195abdf6b963d491b488c4ee07e78b0e7713c1662424955047d57621924f485f120043ca25fcf4d948ee3336c58d8a20d87d13d035d33c36fbfbb3bc9379780656ebcf39261e41529294b3656e5f49c5d0df55a6efa9c007273739e7933edf75dd74b89c2491755cca82b036984a4667e004097170d6ca0da6edff4138a3d3d2eb6582021177803009c26a674ffef253deb87421f8a3d23050de0168f6053aae19d7712cf72c4e2acb4f54259c70fe710cfbcd1a09e7b2d2fef644c09fdf75dd4f987ef6b235d90694920bc3f6de970df6f5ab19d043cf0d28768258db264b6e86032e3e057e14f98780e87521522aabbf5b9144f17939722bea345bddaf97acde98a639e4b83922f8cd59b34cf95d5cb38d5aa0325078c614fcc92f8403110f91ea3072b11d534715af51e54a7b882bcd3004f35684301faff29a5e666c5b198719ea90083aade70878a315d5d41cf1faf93447511c812913898d99e5e44259c8b4d044a4040f16414575bb39c48ee5c8520b3b1f56cb386d700dc107985e407a3e74ecf9e7ed3ed9955175a5cb02dbb3f402dcd9cd5843636a6c2e22792cce802595b139eeaa394d2195757513c9b72467c52abd6aeaae83b9fdc3e49727397efd9952cb753d8f74d00a75d79c049f4198bff914741806fc2afed0446d77bbf4fcdae956eaebe339b9dc4be34ef664db439db210299ce2141e5c4e4a995f9f42c727cdefa603d4889e7cb94f974216d9e1f404073f87ad1b2a380a2f349fd3da055331edbf946768224122d850b3a3b67e1ab260dd1910f828aac4add8c7822f525214370716ed13349f2f74ebc857a5418e2bc6fe1abedb4313492edcbd243e050b512478eab2ba0d862650b15bd434ceb32a3702b190be9270a84c078837408e5a5c68ff57ddfec8ee41d65f055e669a0e080fd1d6b16c641dfb5ace648d20ddd9d43cc1278687ad6a5cb37593fcfb8ae9e84fa0e0929b4d96bee80b10f2d8407fab1a57d6dd997e3f98644f43ce4632469417a14b594d34aa3f60ecf0a78cadea6b3b89b2bf64a204ff28ee86712d34bcc9c8175ba5f207c99042868eef1cbba8f822bcc7e6eae78752b6eb6518a57317f122b017b8c3c52c84b2996b230971810ff917c212fd35411ffc34fcedec33288194695c0eb1409b59be193369e0a96a53f46b65b13599820b2b63b17c41b0a22a7a39897f46ac66b2c8752d2b241725b872beecd4565678fe7970156bca21eb465ff3d438077c98143dc79d6fa30ddefd0ef0b615ec281567edecfe7e079eb341df86ecff2ee9b2355a58aed1cfd8f76b81c5e62d9a2b85967d80d9580fc6d8c389365f1036b0e241ea6d0c9dffa23ad758ef4955b4b247fe11249176b5dedc6f2f3ab4310e8573f6275e8ce697e333f8b875b51a85dc067004e347c2c1bc31ad391193165833c930af7d1b0e528cdc64af8064ed91b0c82bee68a3f42e57f06fcb9db0291a886e05ed00ad843177a84a49e7ab77cb2710b4afaa34216a45e531abf9670471288010de94ead7d8c8b3e5324d0410956878f118185a85b66e9a012b92f6421393c9880fc13a9fa683579eb7ad11bfc74c410101b99d522266191bf548010d3e10dfd7b9eb008af9e1bce3b360e61b09b9ef342154404b369792c34303da21b815e3f058a45d245723b091f131883e78b724a851aba601cd3651b0a6268c3ac2f0e7be754d43a106bff7836e0fea948d9048cf4bd8838d4fe8c003420e8b5fad6f874ea00c75524e96affe49e295d219292165a24a468a910ac2efeda321de171226711f4d7d8e04729b4871556923aff60f66b7c1b82398fdd23a1c26ed09fb1375e522b9b7b7d06c5c99f6536977c8aab76ac6667281b59798d1dfc6348e288b147e5c6ecce1781939e33e36b45b99fe516f271205acda9a70a2f22c8abf8ba3d83bcaea48d1bf0645516731f8dc17eba92bd64d3463cb57987737ae3ab29a9ff7af83325fba713a878925cf463b891d8ff12f8cf88daa4c1a6261d51acb2bbd06d1482e40d6bb19777098e2f3dd6ff7f36bf1f15ca1b6b205b1bbd49f5d11816f34dfd85be8bc7e4b4d201ffbaf821d93e81c1d22ce639ae0822772af03c2847bd30927d5498f7de30b440b66aa28c1cdb7f97847d8a300ae178a0c0680c193f93d6c1ffc10aa9a215</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看 | Been encrypted, click here to enter password.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>Blog重生于2022/07/24</title>
    <url>/posts/152cd35c/</url>
    <content><![CDATA[<p>2022年7月份, 公司开始了裁员计划，虽然名单没有我，但我的心态也发生了一些转变，都是打工人，个人就不要讲什么情怀了，希望公司也不要灌输价值观，说白了都是资本家奴役的手段而已</p>
<p>之前还经常在语雀或者内网ATA发一些技术贴，想想如果自己未来离开这里，啥都带不走也是蛮可惜的。</p>
<p>所以，很久不用的技术博客就复活吧。</p>
<p>[更新：一个朋友被裁了，拿了N+5，然后转头入职B站，base涨幅接近50%，我想说我也想要]</p>
]]></content>
      <tags>
        <tag>easy</tag>
      </tags>
  </entry>
  <entry>
    <title>How to use docker to run your task</title>
    <url>/posts/1aa54f31/</url>
    <content><![CDATA[<p>A example about how to use docker to run your task. That is:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. Pull the images or repository from registry</span><br><span class="line">   docker pull reg.docker.alibaba-inc.com/alinux/kdevel-x64:3.230303.1</span><br><span class="line"></span><br><span class="line">2. List the images</span><br><span class="line">   docker images</span><br><span class="line"></span><br><span class="line">3. Start the container and interact through terminal</span><br><span class="line">   docker run -itd --net host -v /mnt/sdb/zhaoguanjun.zgj/:/root/workspace reg.docker.alibaba-inc.com/alinux/kdevel-x64 bash</span><br><span class="line"></span><br><span class="line">4. List all the containers</span><br><span class="line">   docker ps -a</span><br><span class="line"></span><br><span class="line">5. Execute the container</span><br><span class="line">   docker exec -it [container-id] bash</span><br><span class="line"></span><br><span class="line">6. Exit the container</span><br><span class="line">   Execute &#x27;exit&#x27; in docker terminal</span><br><span class="line"></span><br><span class="line">7. Kill the container</span><br><span class="line">   docker kill [container-id]</span><br><span class="line"></span><br><span class="line">8. Remove the container or images</span><br><span class="line">   docker rm [container-id]</span><br></pre></td></tr></table></figure>


<p>This document will be continuously improved.</p>
]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Launch VM through QEMU</title>
    <url>/posts/6eda6b08/</url>
    <content><![CDATA[<p>We can lauch vm through qemu quickly. These steps are:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qemu-system-x86_64 -nographic -enable-kvm -cpu host,+x2apic,pmu=on -smp 32,sockets=2,cores=16,threads=1 -m 64G -device virtio-net-pci,netdev=n1 -netdev user,id=n1,hostfwd=tcp::1688-:22 -drive file=/home/zhaoguanjun.zgj/aliyun_3_x64_20G_nocloud_alibase_20211025.qcow2,if=none,id=virtio-disk0 -device virtio-blk-pci,drive=virtio-disk0 -monitor pty -cpu host -machine q35 -drive file=/dev/sdb1,if=none,id=drive-virtio-disk2,format=raw,cache=none,aio=native -device virtio-blk-pci,scsi=off,num-queues=4,config-wce=off,drive=drive-virtio-disk2,id=virtio-disk1 -gdb tcp::1111</span><br></pre></td></tr></table></figure>

<p>Some params and the related meanings:</p>
<ul>
<li>-nographic, Disable graphical output and redirect serial I&#x2F;Os to console</li>
<li>-daemonize, Daemonize the qemu thread</li>
</ul>
<p>If you want to add a mdev device, you should:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. uuid # For example, a6613d90-c944-11ed-a67e-00e04c84d2c4</span><br><span class="line">2. echo &quot;a6613d90-c944-11ed-a67e-00e04c84d2c4&quot; &gt; /sys/bus/pci/devices/0000:6d:00.0/mdev_supported_types/dlb2-dlb/create</span><br><span class="line">3. add &quot;-device vfio-pci,sysfsdev=/sys/bus/pci/devices/0000:6d:00.0/a6613d90-c944-11ed-a67e-00e04c84d2c4/&quot; to the qemu boot line</span><br></pre></td></tr></table></figure>

<p>Live migration from A to B:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A: Launch VM, source</span><br><span class="line">- qemu-system-x86_64 -nographic -enable-kvm -cpu host,+x2apic,pmu=on -smp 32,sockets=2,cores=16,threads=1 -m 64G -device virtio-net-pci,netdev=n1 -netdev user,id=n1,hostfwd=tcp::1688-:22 -drive file=/home/zhaoguanjun.zgj/aliyun_3_x64_20G_nocloud_alibase_20211025.qcow2,if=none,id=virtio-disk0 -device virtio-blk-pci,drive=virtio-disk0 -monitor pty -cpu host -machine q35 -drive file=/dev/sdb1,if=none,id=drive-virtio-disk2,format=raw,cache=none,aio=native -device virtio-blk-pci,scsi=off,num-queues=4,config-wce=off,drive=drive-virtio-disk2,id=virtio-disk1 -gdb tcp::1111</span><br><span class="line"></span><br><span class="line">B: Migrate to, destination</span><br><span class="line">- qemu-system-x86_64 -nographic -enable-kvm -cpu host,+x2apic,pmu=on -smp 32,sockets=2,cores=16,threads=1 -m 64G -device virtio-net-pci,netdev=n1 -netdev user,id=n1,hostfwd=tcp::1688-:22 -drive file=/home/zhaoguanjun.zgj/aliyun_3_x64_20G_nocloud_alibase_20211025.qcow2,if=none,id=virtio-disk0 -device virtio-blk-pci,drive=virtio-disk0 -monitor pty -cpu host -machine q35 -drive file=/dev/sdb1,if=none,id=drive-virtio-disk2,format=raw,cache=none,aio=native -device virtio-blk-pci,scsi=off,num-queues=4,config-wce=off,drive=drive-virtio-disk2,id=virtio-disk1 -gdb tcp::1111 -incoming tcp:(A IP):(A PORT)</span><br><span class="line">- ./qemu-system-x86_64 -monitor stdio</span><br><span class="line">  (qemu) migrate tcp:(A IP):(A PORT)</span><br><span class="line">  (qemu) info migrate</span><br></pre></td></tr></table></figure>
<p>Then, if migration status echo ‘completed’, the VM migrate from A to B successfully.</p>
]]></content>
      <tags>
        <tag>qemu</tag>
      </tags>
  </entry>
  <entry>
    <title>Prompts used with stable diffusion</title>
    <url>/posts/72968cc7/</url>
    <content><![CDATA[<p>This article collects prompts for Stable Diffusion’s automatic drawing tool.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1girl, the whole body, standing, thin waist, slender waist, fully naked, (completely nude:1.2), collarbone, medium breasts, showing breasts, round breasts, nipples, glowing nipples, pussy, vaginal, no bra, no panties, no bikini, smile, outdoor, best quality ,masterpiece, illustration, an extremely delicate and beautiful, extremely detailed ,CG ,unity ,8k wallpaper, Amazing, finely detail, best quality, official art, extremely detailed CG unity 8k wallpaper, absurdres, huge filesize , ultra-detailed, highres, beautiful detailed girl, extremely detailed eyes and face, beautiful detailed eyes, light on face, realistic, perfect fingers, &lt;perfectPussy_newb0001:1&gt; , &lt;breastinclassBetter_v13:0.5&gt;</span><br><span class="line"></span><br><span class="line">multiple breasts, (mutated hands and fingers:1.5 ), (long body :1.3), (mutation, poorly drawn :1.2) , black-white, bad anatomy, liquid body, liquid tongue, disfigured, malformed, mutated, anatomical nonsense, text font ui, error, malformed hands, long neck, blurred, lowers, lowres, bad anatomy, bad proportions, bad shadow, uncoordinated body, unnatural body, fused breasts, bad breasts, huge breasts, poorly drawn breasts, extra breasts, liquid breasts, heavy breasts, missing breasts, huge haunch, huge thighs, huge calf, bad hands, fused hand, missing hand, disappearing arms, disappearing thigh, disappearing calf, disappearing legs, fused ears, bad ears, poorly drawn ears, extra ears, liquid ears, heavy ears, missing ears, fused animal ears, bad animal ears, poorly drawn animal ears, extra animal ears, liquid animal ears, heavy animal ears, missing animal ears, text, ui, error, missing fingers, missing limb, fused fingers, one hand with more than 5 fingers, one hand with less than 5 fingers, one hand with more than 5 digit, one hand with less than 5 digit, extra digit, fewer digits, fused digit, missing digit, bad digit, liquid digit, colorful tongue, black tongue, cropped, watermark, username, blurry, JPEG artifacts, signature, 3D, 3D game, 3D game scene, 3D character, malformed feet, extra feet, bad feet, poorly drawn feet, fused feet, missing feet, extra shoes, bad shoes, fused shoes, more than two shoes, poorly drawn shoes, bad gloves, poorly drawn gloves, fused gloves, bad cum, poorly drawn cum, fused cum, bad hairs, poorly drawn hairs, fused hairs, big muscles, ugly, bad face, fused face, poorly drawn face, cloned face, big face, long face, bad eyes, fused eyes poorly drawn eyes, extra eyes, malformed limbs, more than 2 nipples, missing nipples, different nipples, fused nipples, bad nipples, poorly drawn nipples, black nipples, colorful nipples, gross proportions. short arm, (((missing arms))), missing thighs, missing calf, missing legs, mutation, duplicate, morbid, mutilated, poorly drawn hands, more than 1 left hand, more than 1 right hand, deformed, (blurry), disfigured, missing legs, extra arms, extra thighs, more than 2 thighs, extra calf, fused calf, extra legs, bad knee, extra knee, more than 2 legs, bad tails, bad mouth, fused mouth, poorly drawn mouth, bad tongue, tongue within mouth, too long tongue, black tongue, big mouth, cracked mouth, bad mouth, dirty face, dirty teeth, dirty pantie, fused pantie, poorly drawn pantie, fused cloth, poorly drawn cloth, bad pantie, yellow teeth, thick lips, bad cameltoe, colorful cameltoe, bad asshole, poorly drawn asshole, fused asshole, missing asshole, bad anus, bad pussy, bad crotch, bad crotch seam, fused anus, fused pussy, fused anus, fused crotch, poorly drawn crotch, fused seam, poorly drawn anus, poorly drawn pussy, poorly drawn crotch, poorly drawn crotch seam, bad thigh gap, missing thigh gap, fused thigh gap, liquid thigh gap, poorly drawn thigh gap, poorly drawn anus, bad collarbone, fused collarbone, missing collarbone, liquid collarbone, strong girl, obesity, worst quality, low quality, normal quality, liquid tentacles, bad tentacles, poorly drawn tentacles, split tentacles, fused tentacles, missing clit, bad clit, fused clit, colorful clit, black clit, liquid clit, QR code, bar code, censored, safety panties, safety knickers, beard, furry ,pony, pubic hair, mosaic, excrement, faeces, shit</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>AIGC</tag>
      </tags>
  </entry>
  <entry>
    <title>Understand kprobe through talking with ChatGPT4</title>
    <url>/posts/7c673635/</url>
    <content><![CDATA[<h1 id="Kprobes-in-Linux-Kernel"><a href="#Kprobes-in-Linux-Kernel" class="headerlink" title="Kprobes in Linux Kernel"></a>Kprobes in Linux Kernel</h1><p>Kprobes is a dynamic tracing and analysis tool in the Linux kernel, which allows developers to insert breakpoints into running kernel code without stopping or recompiling the kernel. Kprobes is designed to minimize its impact on the performance of the target code.</p>
<h2 id="kprobe-insn-page"><a href="#kprobe-insn-page" class="headerlink" title="kprobe_insn_page"></a>kprobe_insn_page</h2><p><code>kprobe_insn_page</code> is a memory page used to store copies of the original instructions that are replaced by Kprobes breakpoints. It serves as a cache for these instructions so that they can be executed without affecting the original code location.</p>
<h2 id="ModR-x2F-M-Byte"><a href="#ModR-x2F-M-Byte" class="headerlink" title="ModR&#x2F;M Byte"></a>ModR&#x2F;M Byte</h2><p>The ModR&#x2F;M byte is part of the x86 instruction set architecture, providing a compact way to encode certain instructions that involve registers and memory operands. The ModR&#x2F;M byte is used in combination with other bytes to specify the complete behavior of an instruction.</p>
<h2 id="Kprobes-Event-Handling"><a href="#Kprobes-Event-Handling" class="headerlink" title="Kprobes Event Handling"></a>Kprobes Event Handling</h2><p>Kprobes inserts a breakpoint (e.g., INT3 instruction) at the target code address. When the breakpoint is triggered, the processor transfers the execution to a predefined Kprobes handler function. The handler function modifies the instruction pointer register (<code>regs-&gt;ip</code>) to point to the memory location containing the copy of the original instruction. The CPU executes the original instruction copy, triggering the INT3 breakpoint again, allowing Kprobes to take control once more before resuming execution.</p>
<h2 id="kprobe-ctlblk"><a href="#kprobe-ctlblk" class="headerlink" title="kprobe_ctlblk"></a>kprobe_ctlblk</h2><p><code>kprobe_ctlblk</code> (Kprobe Control Block) is a kernel data structure used to store control information for each CPU during Kprobes event handling. Each CPU has an instance of <code>kprobe_ctlblk</code>, which contains temporary state and information such as:</p>
<ul>
<li>Status flags indicating the current state of Kprobes event handling.</li>
<li>Saved register values, such as the instruction pointer register (<code>ip</code>).</li>
<li>Other temporary data related to the Kprobes handler function.</li>
</ul>
<p>The main purpose of <code>kprobe_ctlblk</code> is to save and restore CPU register values and other context information during Kprobes event handling.</p>
<h2 id="KPROBE-HIT-SS"><a href="#KPROBE-HIT-SS" class="headerlink" title="KPROBE_HIT_SS"></a>KPROBE_HIT_SS</h2><p><code>KPROBE_HIT_SS</code> is a Kprobes status flag that indicates a Single Step Trap was triggered during Kprobe event handling on x86 architecture. This flag is used to signify this situation so that the Kprobes handler function can correctly handle the single step trap.</p>
<p>When a single step trap is detected during Kprobes event handling, the <code>KPROBE_HIT_SS</code> flag is set to <code>true</code>. The Kprobes handler function can then use this flag to determine how to handle the single step trap, such as whether specific actions need to be performed or how to resume execution after event handling is complete.</p>
<p>In summary, the <code>KPROBE_HIT_SS</code> flag is used during Kprobes event handling to indicate a triggered single step trap so that the Kprobes handler function can correctly handle the situation. This helps ensure that target code execution can continue without being affected by Kprobes after the handler function is complete.</p>
]]></content>
      <tags>
        <tag>chatgpt4</tag>
      </tags>
  </entry>
  <entry>
    <title>dummy syscall test in linux kernel</title>
    <url>/posts/4b2d89b0/</url>
    <content><![CDATA[<p>This is an example about dummy syscall test in linux kernel</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;sys/utsname.h&gt;</span><br><span class="line">#include &lt;errno.h&gt;</span><br><span class="line">#include &lt;time.h&gt;</span><br><span class="line">#include &lt;sched.h&gt;</span><br><span class="line">#include &lt;stdalign.h&gt;</span><br><span class="line">#include &lt;unistd.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;syscall.h&gt;</span><br><span class="line">#include &lt;signal.h&gt;</span><br><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line">#include &lt;errno.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;sys/wait.h&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">	unsigned long i = 0;</span><br><span class="line">	int nr_mysyscall;</span><br><span class="line">	struct utsname buffer;</span><br><span class="line">	struct timespec tstart=&#123;0,0&#125;, tend=&#123;0,0&#125;;</span><br><span class="line"></span><br><span class="line">	errno = 0;</span><br><span class="line">	if (uname(&amp;buffer) != 0) &#123;</span><br><span class="line">		perror(&quot;uname&quot;);</span><br><span class="line">		exit(EXIT_FAILURE);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	if (buffer.release[0] == &#x27;5&#x27;) &#123;</span><br><span class="line">		printf(&quot;5.10 kernel\n&quot;);</span><br><span class="line">		clock_gettime(CLOCK_MONOTONIC, &amp;tstart);</span><br><span class="line">		for (i=0; i&lt;30000000; i++)</span><br><span class="line">			syscall(335);</span><br><span class="line">		clock_gettime(CLOCK_MONOTONIC, &amp;tend);</span><br><span class="line">		printf(&quot;took about %.5f seconds\n&quot;,</span><br><span class="line">				((double)tend.tv_sec + 1.0e-9*tend.tv_nsec) -</span><br><span class="line">				((double)tstart.tv_sec + 1.0e-9*tstart.tv_nsec));</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		printf(&quot;4.19 kernel\n&quot;);</span><br><span class="line">		clock_gettime(CLOCK_MONOTONIC, &amp;tstart);</span><br><span class="line">		for (i=0; i&lt;30000000; i++)</span><br><span class="line">			syscall(438);</span><br><span class="line">		clock_gettime(CLOCK_MONOTONIC, &amp;tend);</span><br><span class="line">		printf(&quot;took about %.5f seconds\n&quot;,</span><br><span class="line">				((double)tend.tv_sec + 1.0e-9*tend.tv_nsec) -</span><br><span class="line">				((double)tstart.tv_sec + 1.0e-9*tstart.tv_nsec));</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Ftrace探析</title>
    <url>/posts/b7ee8ec8/</url>
    <content><![CDATA[<p>ftrace（function tracer）支持全局trace，可以对内核和模块全局函数进行跟踪。tracer为编译器在编译时自动插入代码段的一条指令，程序在运行时能够利用这条指令实现跳转。目前Linux 5.10支持的tracer种类有8种，分别为<code>hwlat</code>、<code>blk</code>、<code>function_graph</code>、<code>wakeup_dl</code>、<code>wakeup_rt</code>、<code>wakeup</code>、<code>function</code>、<code>nop</code>，可以通过<code>/sys/kernel/debug/tracing/available_tracers</code>查看。</p>
<span id="more"></span>

<p>GCC允许在编译程序时添加<code>-pg</code>在每一个函数起始处自动插入5个字节的<code>call mcount</code>（ARM64为<code>push rbp</code>）指令，<code>mcount</code>的实现依赖于GLIBC。由于<code>mcount</code>不能记录参数，所以从GCC 4.6开始通过<code>-pg -mfentry</code>将<code>mcount</code>替换为<code>fentry</code>，但是内核中依然使用宏MCOUNT_ADDR来代表GLIBC实现的<code>fentry</code>。如今，内核已经废弃<code>mcount</code>（抱歉，不记得从哪个版本废弃的了）。</p>
<p>编写一个简单程序<code>hello.c</code>做实验：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译该文件<code>gcc -o hello.o hello.c</code>，然后<code>objdump -S hello.o</code>，可以看到如下形式的经过重定向的汇编代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0000000000401050 &lt;__fentry__@plt&gt;:</span><br><span class="line">  401050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 404028 &lt;__fentry__@GLIBC_2.13&gt;</span><br><span class="line">  401056:	68 02 00 00 00       	pushq  $0x2</span><br><span class="line">  40105b:	e9 c0 ff ff ff       	jmpq   401020 &lt;.plt&gt;</span><br><span class="line">  </span><br><span class="line">0000000000401196 &lt;main&gt;:</span><br><span class="line">  401196:	e8 b5 fe ff ff       	callq  401050 &lt;__fentry__@plt&gt;</span><br><span class="line">  40119b:	55                   	push   %rbp</span><br><span class="line">  40119c:	48 89 e5             	mov    %rsp,%rbp</span><br><span class="line">  40119f:	b8 00 00 00 00       	mov    $0x0,%eax</span><br><span class="line">  4011a4:	5d                   	pop    %rbp</span><br><span class="line">  4011a5:	c3                   	retq</span><br><span class="line">  4011a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)</span><br><span class="line">  4011ad:	00 00 00</span><br></pre></td></tr></table></figure>

<p>看到GCC在main函数的起始位置插入了5个bytes的callq指令（汇编opcode为0xfffffeb5e8）。</p>
<p>编译模块时会用到内核源码树中的<code>Makefile</code>和<code>.config</code>文件（实际上是根据<code>.config</code>生成的<code>include/config/auto.conf</code>文件），如果内核源码树中的配置打开了<code>CONFIG_FUNCTION_TRACER</code>，那么在编译模块时也会增加<code>-pg -mfentry</code>，并将影响了的函数地址保存在<code>__mcount_loc</code>段中。</p>
<p>在加载.ko时首先根据模块放置的实际地址为<code>__mcount_loc</code>段重定向，并记录在<code>mod-&gt;ftrace_callsites</code>中，最后同样会调用<code>ftrace_process_locs</code>函数来处理（前文有提到该函数）。</p>
<p>如果当前运行的内核打开了<code>CONFIG_FUNCTION_TRACER</code>，但编译<code>module</code>时未打开，实际上编出来的.ko也能加载，只是其中的函数都不支持trace。</p>
<h3 id="ftrace初始化"><a href="#ftrace初始化" class="headerlink" title="ftrace初始化"></a>ftrace初始化</h3><p>ftrace实现代码位于<code>kernel/trace/</code>目录下，初始化代码入口是<code>ftrace_init</code>（由<code>init/main.c</code>文件内<code>start_kernel</code>函数调用）。代码如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> __init <span class="title function_">ftrace_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> __start_mcount_loc[];</span><br><span class="line">	<span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> __stop_mcount_loc[];</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">long</span> count, flags;</span><br><span class="line">	<span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">	local_irq_save(flags);</span><br><span class="line">	ret = ftrace_dyn_arch_init();</span><br><span class="line">	local_irq_restore(flags);</span><br><span class="line">	<span class="keyword">if</span> (ret)</span><br><span class="line">		<span class="keyword">goto</span> failed;</span><br><span class="line"></span><br><span class="line">	count = __stop_mcount_loc - __start_mcount_loc;</span><br><span class="line">	<span class="keyword">if</span> (!count) &#123;</span><br><span class="line">		pr_info(<span class="string">&quot;ftrace: No functions to be traced?\n&quot;</span>);</span><br><span class="line">		<span class="keyword">goto</span> failed;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pr_info(<span class="string">&quot;ftrace: allocating %ld entries in %ld pages\n&quot;</span>,</span><br><span class="line">		count, count / ENTRIES_PER_PAGE + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">	last_ftrace_enabled = ftrace_enabled = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	ret = ftrace_process_locs(<span class="literal">NULL</span>,</span><br><span class="line">				  __start_mcount_loc,</span><br><span class="line">				  __stop_mcount_loc);</span><br><span class="line"></span><br><span class="line">	pr_info(<span class="string">&quot;ftrace: allocated %ld pages with %ld groups\n&quot;</span>,</span><br><span class="line">		ftrace_number_of_pages, ftrace_number_of_groups);</span><br><span class="line"></span><br><span class="line">	set_ftrace_early_filters();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line"> failed:</span><br><span class="line">	ftrace_disabled = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码将将对<code>__start_mcount_loc</code>和<code>__stop_mcount_loc</code>(由内核链接脚本<code>include/asm-generic/vmlinux.lds.h</code>定义的段，放置所有段名为<code>__mcount_loc</code>、<code>__patchable_function_entries</code>的代码）中间的代码段进行特殊处理。有测试数据显示，给函数增加callq\retq指令会带来13%的性能损耗，所以，ftrace初始化时的“特殊处理”就是将插入的指令替换为5 bytes的nop指令，以x86_64为例，大小5个bytes的nop指令为0x0f 1f 44 00 00，同时将这些代码段地址记录下来。</p>
<p>内核记录插入指令的数据结构为<code>struct dyn_ftrace</code>，其中ip存放代码段地址，flags存放标志位（unsigned long，低23位存放该函数注册callback的数量，23位以上存放该函数是否被trace、是否需要保存寄存器等标志位），arch存放不同架构所需的额外数据。整体结构如下入所示：</p>
<p><img data-src="/../images/ftrace.png" alt="image-20210619185753069"></p>
<p>一个page能够存放的ftrace entry计算方式为<code>PAGE_SIZE / sizeof(struct dyn_ftrace)</code>，所需要的ftrace entry的数目为<code>__stop_mcount_loc - __start_mcount_loc</code>，所以总共需要的物理页数量为<code>(__stop_mcount_loc - start_mcount_loc) / (PAGE_SIZE / sizeof(struct dyn_ftrace))</code>向上取整。由于Linux系统内存分配采取伙伴系统，存在order的概念，描述伙伴系统中不同大小的连续物理内存集簇（MAX_ORDER通常为11，所以kmalloc能够分配的最大内存为<code>2^(MAX_ORDER - 1) * PAGE_SIZE = 4MB</code>），ftrace希望能够最大可能占用连续的物理页，所以根据<code>order=tls(page) - 1</code>来尝试从尽可能大的order分配。然而事情有时候不尽如人意，如果分配<code>2^order</code>连续物理页失败，则<code>order = order&gt;&gt;1</code>继续分配，并将拿到的物理页放入下一个ftrace_page group。</p>
<p>最关键的函数是<code>ftrace_make_nop</code>，函数如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">ftrace_make_nop</span><span class="params">(<span class="keyword">struct</span> module *mod, <span class="keyword">struct</span> dyn_ftrace *rec, <span class="type">unsigned</span> <span class="type">long</span> addr)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">long</span> ip = rec-&gt;ip;</span><br><span class="line">	<span class="type">const</span> <span class="type">char</span> *new, *old;</span><br><span class="line"></span><br><span class="line">	old = ftrace_call_replace(ip, addr);</span><br><span class="line">	new = ftrace_nop_replace();</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * On boot up, and when modules are loaded, the MCOUNT_ADDR</span></span><br><span class="line"><span class="comment">	 * is converted to a nop, and will never become MCOUNT_ADDR</span></span><br><span class="line"><span class="comment">	 * again. This code is either running before SMP (on boot up)</span></span><br><span class="line"><span class="comment">	 * or before the code will ever be executed (module load).</span></span><br><span class="line"><span class="comment">	 * We do not want to use the breakpoint version in this case,</span></span><br><span class="line"><span class="comment">	 * just modify the code directly.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">if</span> (addr == MCOUNT_ADDR)</span><br><span class="line">		<span class="keyword">return</span> ftrace_modify_code_direct(ip, old, new);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * x86 overrides ftrace_replace_code -- this function will never be used</span></span><br><span class="line"><span class="comment">	 * in this case.</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	WARN_ONCE(<span class="number">1</span>, <span class="string">&quot;invalid use of ftrace_make_nop&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> -EINVAL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>ftrace_call_replace函数直接调用text_gen_insn，这里是为了拿到代码段ip地址的指令，但是实现逻辑暂时没有搞清楚，据说涉及kernel-5.10新特性<code>static calls</code>，在这里挖个坑，详情参考：<a href="https://blog.yossarian.net/2020/12/16/Static-calls-in-Linux-5-10%E3%80%82">https://blog.yossarian.net/2020/12/16/Static-calls-in-Linux-5-10。</a></p>
<p>以x86_64为例，ftrace_nop_replace找到大小为5个bytes的nop指令，该指令存放在x86_nops全局数组中，直接返回x86_nops[5]即可，x86_nops[5]通过一系列的数组和宏解析，最终返回的结果0x0f 1f 44 00 00，对应的nop指令为nopl 0x00(%eax, %eax, 1)。具体实现如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Generic 64bit nops from GAS:</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 1: nop</span></span><br><span class="line"><span class="comment"> * 2: osp nop</span></span><br><span class="line"><span class="comment"> * 3: nopl (%eax)</span></span><br><span class="line"><span class="comment"> * 4: nopl 0x00(%eax)</span></span><br><span class="line"><span class="comment"> * 5: nopl 0x00(%eax,%eax,1)</span></span><br><span class="line"><span class="comment"> * 6: osp nopl 0x00(%eax,%eax,1)</span></span><br><span class="line"><span class="comment"> * 7: nopl 0x00000000(%eax)</span></span><br><span class="line"><span class="comment"> * 8: nopl 0x00000000(%eax,%eax,1)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP1	0x90</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP2	0x66,BYTES_NOP1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP3	0x0f,0x1f,0x00</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP4	0x0f,0x1f,0x40,0x00</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP5	0x0f,0x1f,0x44,0x00,0x00</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP6	0x66,BYTES_NOP5</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP7	0x0f,0x1f,0x80,0x00,0x00,0x00,0x00</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> BYTES_NOP8	0x0f,0x1f,0x84,0x00,0x00,0x00,0x00,0x00</span></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> x86nops[] =</span><br><span class="line">&#123;</span><br><span class="line">	BYTES_NOP1,</span><br><span class="line">	BYTES_NOP2,</span><br><span class="line">	BYTES_NOP3,</span><br><span class="line">	BYTES_NOP4,</span><br><span class="line">	BYTES_NOP5,</span><br><span class="line">	BYTES_NOP6,</span><br><span class="line">	BYTES_NOP7,</span><br><span class="line">	BYTES_NOP8,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> * <span class="type">const</span> x86_nops[ASM_NOP_MAX+<span class="number">1</span>] =</span><br><span class="line">&#123;</span><br><span class="line">	<span class="literal">NULL</span>,</span><br><span class="line">	x86nops,</span><br><span class="line">	x86nops + <span class="number">1</span>,</span><br><span class="line">	x86nops + <span class="number">1</span> + <span class="number">2</span>,</span><br><span class="line">	x86nops + <span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span>,</span><br><span class="line">	x86nops + <span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span>,</span><br><span class="line">	x86nops + <span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span> + <span class="number">5</span>,</span><br><span class="line">	x86nops + <span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span> + <span class="number">5</span> + <span class="number">6</span>,</span><br><span class="line">	x86nops + <span class="number">1</span> + <span class="number">2</span> + <span class="number">3</span> + <span class="number">4</span> + <span class="number">5</span> + <span class="number">6</span> + <span class="number">7</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><code>ftrace_modify_code_direct</code>将相应代码段地址的指令替换为新的5个bytes大小的nop指令。至此ftrace_init基本完成。</p>
<h3 id="ftrace主要框架构成"><a href="#ftrace主要框架构成" class="headerlink" title="ftrace主要框架构成"></a>ftrace主要框架构成</h3><h4 id="ring-buffer"><a href="#ring-buffer" class="headerlink" title="ring buffer"></a>ring buffer</h4><p>ftrace可以支持多种tracer，<code>ring buffer</code>用来存放tracer触发的数据，<code>per_cpu</code>的结构。此外，还有以下特性：</p>
<ul>
<li><code>struct ring_buffer_per_cpu</code>根据<code>size</code>来分配<code>buffer_page</code>，并将这些<code>pages</code>通过<code>list_head</code>链接成环，这就是“<code>ring</code>”的由来</li>
<li><code>buffer_page</code>仅是一个控制结构，真正的<code>page</code>是<code>struct buffer_data_page</code>，用来存放数据。<code>data[]</code>数据空间通过<code>struct ring_buffer_event</code>控制格式</li>
<li><code>struct ring_buffer_per_cpu</code>通过<code>head_page</code>(头指针\读)、<code>tail_page</code>(尾指针\写)、<code>commit_page</code>(写确认)来管理<code>ring</code>；同理<code>buffer_page-&gt;write</code>、<code>buffer_page-&gt;read</code>、<code>buffer_data_page-&gt;commit</code>来管理page内偏移量</li>
<li><code>ring_buffer_per_cpu-&gt;reader_page</code>还包含一个单独的<code>buffer_page</code>，用以支持<code>reader</code>方式的读方式</li>
</ul>
<p><code>ring buffer</code>结构如下图所示：</p>
<p><img data-src="/../images/ring_buffer.png" alt="ring_buffer"></p>
<p><code>ring buffer</code>初始化函数是<code>early_trace_init</code>，同样由<code>init/main.c</code>文件内<code>start_kernel</code>函数调用。详细函数调用流程如下：</p>
<p><code>start_kernel-&gt;early_trace_init-&gt;tracer_alloc_buffers-&gt;ring_buffer_alloc-&gt;__ring_buffer_alloc</code>:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* __ring_buffer_alloc - allocate a new ring_buffer</span></span><br><span class="line"><span class="comment"> * @size: the size in bytes per cpu that is needed.</span></span><br><span class="line"><span class="comment"> * @flags: attributes to set for the ring buffer.</span></span><br><span class="line"><span class="comment"> * @key: ring buffer reader_lock_key.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Currently the only flag that is available is the RB_FL_OVERWRITE</span></span><br><span class="line"><span class="comment"> * flag. This flag means that the buffer will overwrite old data</span></span><br><span class="line"><span class="comment"> * when the buffer wraps. If this flag is not set, the buffer will</span></span><br><span class="line"><span class="comment"> * drop data when the tail hits the head.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">trace_buffer</span> *__<span class="title">ring_buffer_alloc</span>(<span class="title">unsigned</span> <span class="title">long</span> <span class="title">size</span>, <span class="title">unsigned</span> <span class="title">flags</span>,</span></span><br><span class="line"><span class="class">					<span class="keyword">struct</span> <span class="title">lock_class_key</span> *<span class="title">key</span>)</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">trace_buffer</span> *<span class="title">buffer</span>;</span></span><br><span class="line">	<span class="type">long</span> nr_pages;</span><br><span class="line">	<span class="type">int</span> bsize;</span><br><span class="line">	<span class="type">int</span> cpu;</span><br><span class="line">	<span class="type">int</span> ret;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* keep it in its own cache line */</span></span><br><span class="line">	buffer = kzalloc(ALIGN(<span class="keyword">sizeof</span>(*buffer), cache_line_size()),</span><br><span class="line">			 GFP_KERNEL);</span><br><span class="line">	<span class="keyword">if</span> (!buffer)</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (!zalloc_cpumask_var(&amp;buffer-&gt;cpumask, GFP_KERNEL))</span><br><span class="line">		<span class="keyword">goto</span> fail_free_buffer;</span><br><span class="line"></span><br><span class="line">	nr_pages = DIV_ROUND_UP(size, BUF_PAGE_SIZE);</span><br><span class="line">	buffer-&gt;flags = flags;</span><br><span class="line">	buffer-&gt;clock = trace_clock_local;</span><br><span class="line">	buffer-&gt;reader_lock_key = key;</span><br><span class="line"></span><br><span class="line">	init_irq_work(&amp;buffer-&gt;irq_work.work, rb_wake_up_waiters);</span><br><span class="line">	init_waitqueue_head(&amp;buffer-&gt;irq_work.waiters);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* need at least two pages */</span></span><br><span class="line">	<span class="keyword">if</span> (nr_pages &lt; <span class="number">2</span>)</span><br><span class="line">		nr_pages = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	buffer-&gt;cpus = nr_cpu_ids;</span><br><span class="line"></span><br><span class="line">	bsize = <span class="keyword">sizeof</span>(<span class="type">void</span> *) * nr_cpu_ids;</span><br><span class="line">	buffer-&gt;buffers = kzalloc(ALIGN(bsize, cache_line_size()),</span><br><span class="line">				  GFP_KERNEL);</span><br><span class="line">	<span class="keyword">if</span> (!buffer-&gt;buffers)</span><br><span class="line">		<span class="keyword">goto</span> fail_free_cpumask;</span><br><span class="line"></span><br><span class="line">	cpu = raw_smp_processor_id();</span><br><span class="line">	cpumask_set_cpu(cpu, buffer-&gt;cpumask);</span><br><span class="line">	buffer-&gt;buffers[cpu] = rb_allocate_cpu_buffer(buffer, nr_pages, cpu);</span><br><span class="line">	<span class="keyword">if</span> (!buffer-&gt;buffers[cpu])</span><br><span class="line">		<span class="keyword">goto</span> fail_free_buffers;</span><br><span class="line"></span><br><span class="line">	ret = cpuhp_state_add_instance(CPUHP_TRACE_RB_PREPARE, &amp;buffer-&gt;node);</span><br><span class="line">	<span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</span><br><span class="line">		<span class="keyword">goto</span> fail_free_buffers;</span><br><span class="line"></span><br><span class="line">	mutex_init(&amp;buffer-&gt;mutex);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> buffer;</span><br><span class="line"></span><br><span class="line"> fail_free_buffers:</span><br><span class="line">	for_each_buffer_cpu(buffer, cpu) &#123;</span><br><span class="line">		<span class="keyword">if</span> (buffer-&gt;buffers[cpu])</span><br><span class="line">			rb_free_cpu_buffer(buffer-&gt;buffers[cpu]);</span><br><span class="line">	&#125;</span><br><span class="line">	kfree(buffer-&gt;buffers);</span><br><span class="line"></span><br><span class="line"> fail_free_cpumask:</span><br><span class="line">	free_cpumask_var(buffer-&gt;cpumask);</span><br><span class="line"></span><br><span class="line"> fail_free_buffer:</span><br><span class="line">	kfree(buffer);</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">EXPORT_SYMBOL_GPL(__ring_buffer_alloc);</span><br></pre></td></tr></table></figure>

<p>其中代码流程都很常规，需要注意一些小trick:</p>
<ul>
<li>很多时候分配内存都是cache_line_size对齐，这是由于涉及per_cpu类型的数据都要尤其注意，缓存行对齐防止不必要的访存。</li>
<li>仅针对当前cpu（通过<code>raw_smp_processor_id()</code>获取）分配<code>ring buffer</code>，最初的实现是针对每一个cpu同时创建<code>ring buffer</code>，由于当前内核还没有初始化<code>sched</code>和<code>irq</code>，我认为由当前cpu为其它cpu分配<code>ring buffer</code>确实有点不太合理。最新的实现新增了一个cpu状态<code>CPUHP_TRACE_RB_PREPARE</code>，调用<code>cpuhp_setup_state_multi(CPUHP_TRACE_RB_PREPARE, &quot;trace/RB:prepare&quot;, trace_rb_cpu_prepare, NULL)</code>为该状态注册一个callback函数，然后调用<code>cpuhp_state_add_instance(CPUHP_TRACE_RB_PREPARE, &amp;buffer-&gt;node)</code>显示触发<code>CPUHP_TRACE_RB_PREPARE</code>。这一修改参见：<a href="https://www.mail-archive.com/linux-kernel@vger.kernel.org/msg1280988.html">https://www.mail-archive.com/linux-kernel@vger.kernel.org/msg1280988.html</a></li>
</ul>
<p><code>ring buffer</code>是trace机制的基础，用来记录tracer信息。而ftrace可能发生在不同的上下文中执行（可能是正常进程上下文、终端、NMI等），所以需要对<code>ring buffer</code>进行互斥访问。但是又由于ftrace不能给正常的内核业务带来过大的开销，引入了无锁的设计。为了支持<code>nested-write</code>嵌套写的免锁操作，引入<code>commit</code>的概念。这里是整个<code>ring buffer</code>设计的精髓。为了防止误导各位同学，这里不做解读。具体设计参加linux官方文档：<a href="https://www.kernel.org/doc/Documentation/trace/ring-buffer-design.txt">https://www.kernel.org/doc/Documentation/trace/ring-buffer-design.txt</a></p>
<h4 id="ftracefs"><a href="#ftracefs" class="headerlink" title="ftracefs"></a>ftracefs</h4><p>ftrace是内核的机制，用户需要利用该机制进行内核调试、性能分析等，所以内核提供ftracefs给用户提供定制化ftrace服务、呈现结果。</p>
<p>ftracefs通过三大类呈现，分别是<code>tracer</code>、<code>filter_functions</code>、<code>event</code>。上文提到目前Linux 5.10支持的tracer种类有8种，分别为<code>hwlat</code>、<code>blk</code>、<code>function_graph</code>、<code>wakeup_dl</code>、<code>wakeup_rt</code>、<code>wakeup</code>、<code>function</code>、<code>nop</code>，选取function_graph为例来查看open系统调用的调用流程。</p>
<p>通过ftracefs进入如下设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo 0 &gt; /sys/kernel/debug/tracing/tracing_on   #关闭trace</span><br><span class="line">echo function_graph &gt; /sys/kernel/debug/tracing/current_tracer    #设置跟踪函数调用栈</span><br><span class="line">echo 1 &gt; /sys/kernel/debug/tracing/tracing_on   #打开trace</span><br><span class="line">ls			#触发open系统调用</span><br><span class="line">echo 0 &gt; /sys/kernel/debug/tracing/tracing_on   #关闭trace</span><br></pre></td></tr></table></figure>

<p>查看文件<code>/sys/kernel/debug/tracing/trace</code>，所有信息都是从<code>ring buffer</code>读取，由于是无锁的，在对function_graph做trace时需要确保没有其他的event干扰。可以显示open系统调用的调用链、执行CPU、函数耗时。如下所示，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># tracer: function_graph</span><br><span class="line">#</span><br><span class="line"># CPU  DURATION                  FUNCTION CALLS</span><br><span class="line"># |     |   |                     |   |   |   |</span><br><span class="line"> 0)               |  __x64_sys_openat() &#123;</span><br><span class="line"> 0)               |    do_sys_openat2() &#123;</span><br><span class="line"> 0)               |      getname() &#123;</span><br><span class="line"> 0)               |        getname_flags.part.0() &#123;</span><br><span class="line"> 0)               |          kmem_cache_alloc() &#123;</span><br><span class="line"> 0)   0.181 us    |            should_failslab();</span><br><span class="line"> 0)   0.530 us    |          &#125;</span><br><span class="line"> 0)               |          __check_object_size() &#123;</span><br><span class="line"> 0)               |            __check_object_size.part.0() &#123;</span><br><span class="line"> 0)   0.198 us    |              check_stack_object();</span><br><span class="line"> 0)   0.181 us    |              __virt_addr_valid();</span><br><span class="line"> 0)   0.186 us    |              __check_heap_object();</span><br><span class="line"> 0)   1.234 us    |            &#125;</span><br><span class="line"> 0)   1.553 us    |          &#125;</span><br><span class="line"> 0)   2.630 us    |        &#125;</span><br><span class="line"> 0)   2.954 us    |      &#125;</span><br><span class="line"> 0)               |      get_unused_fd_flags() &#123;</span><br><span class="line"> 0)               |        __alloc_fd() &#123;</span><br><span class="line"> 0)   0.380 us    |          _raw_spin_lock();</span><br><span class="line"> 0)   0.177 us    |          expand_files();</span><br><span class="line"> 0)   1.397 us    |        &#125;</span><br><span class="line"> 0)   1.802 us    |      &#125;</span><br><span class="line"> 0)               |      do_filp_open() &#123;</span><br><span class="line"> 0)               |        path_openat() &#123;</span><br><span class="line"> 0)               |          alloc_empty_file() &#123;</span><br><span class="line"> 0)               |            __alloc_file() &#123;</span><br><span class="line"> 0)               |              kmem_cache_alloc() &#123;</span><br><span class="line"> 0)   0.177 us    |                should_failslab();</span><br><span class="line"> 0)   0.866 us    |              &#125;</span><br><span class="line"> 0)               |              security_file_alloc() &#123;</span><br><span class="line"> 0)               |                kmem_cache_alloc() &#123;</span><br><span class="line"> 0)   0.177 us    |                  should_failslab();</span><br><span class="line"> 0)   0.962 us    |                &#125;</span><br><span class="line"> 0)   1.310 us    |              &#125;</span><br><span class="line"> 0)   0.176 us    |              __mutex_init();</span><br><span class="line"> 0)   3.432 us    |            &#125;</span><br><span class="line"> 0)   3.932 us    |          &#125;</span><br><span class="line"> 0)               |          path_init() &#123;</span><br><span class="line"> 0)               |            nd_jump_root() &#123;</span><br><span class="line"> 0)   0.176 us    |              set_root();</span><br><span class="line"> 0)   0.511 us    |            &#125;</span><br><span class="line"> 0)   0.868 us    |          &#125;</span><br><span class="line"> 0)               |          link_path_walk.part.0() &#123;</span><br><span class="line"> 0)               |            inode_permission.part.0() &#123;</span><br><span class="line"> 0)   0.204 us    |              generic_permission();</span><br><span class="line"> 0)   0.179 us    |              security_inode_permission();</span><br><span class="line"> 0)   0.883 us    |            &#125;</span><br><span class="line"> 0)               |            walk_component() &#123;</span><br><span class="line"> 0)               |              lookup_fast() &#123;</span><br><span class="line"> 0)   0.236 us    |                __d_lookup_rcu();</span><br><span class="line"> 0)   0.859 us    |              &#125;</span><br><span class="line"> 0)               |              step_into() &#123;</span><br><span class="line"> 0)   0.180 us    |                __follow_mount_rcu();</span><br><span class="line"> 0)   0.521 us    |              &#125;</span><br><span class="line"> 0)   1.952 us    |            &#125;</span><br><span class="line"> 0)               |            inode_permission.part.0() &#123;</span><br><span class="line"> 0)   0.177 us    |              generic_permission();</span><br><span class="line"> 0)   0.180 us    |              security_inode_permission();</span><br><span class="line"> 0)   1.010 us    |            &#125;</span><br><span class="line"> 0)               |            walk_component() &#123;</span><br><span class="line"> 0)               |              lookup_fast() &#123;</span><br><span class="line"> 0)   0.376 us    |                __d_lookup_rcu();</span><br><span class="line"> 0)   0.738 us    |              &#125;</span><br><span class="line"> 0)               |              step_into() &#123;</span><br><span class="line"> 0)   0.182 us    |                __follow_mount_rcu();</span><br><span class="line"> 0)   0.521 us    |              &#125;</span><br><span class="line"> 0)   1.768 us    |            &#125;</span><br><span class="line"> 0)               |            inode_permission.part.0() &#123;</span><br><span class="line"> 0)   0.182 us    |              generic_permission();</span><br><span class="line"> 0)   0.176 us    |              security_inode_permission();</span><br><span class="line"> 0)   0.846 us    |            &#125;</span><br><span class="line"> 0)   7.724 us    |          &#125;</span><br><span class="line"> 0)               |          open_last_lookups() &#123;</span><br><span class="line"> 0)               |            lookup_fast() &#123;</span><br><span class="line"> 0)   0.184 us    |              __d_lookup_rcu();</span><br><span class="line"> 0)   0.518 us    |            &#125;</span><br><span class="line"> 0)               |            step_into() &#123;</span><br><span class="line"> 0)   0.179 us    |              __follow_mount_rcu();</span><br><span class="line"> 0)   0.513 us    |            &#125;</span><br><span class="line"> 0)   1.525 us    |          &#125;</span><br><span class="line"> 0)               |          do_open() &#123;</span><br><span class="line"> 0)               |            complete_walk() &#123;</span><br><span class="line"> 0)               |              try_to_unlazy() &#123;</span><br><span class="line"> 0)   0.181 us    |                legitimize_links();</span><br><span class="line"> 0)               |                __legitimize_path() &#123;</span><br><span class="line"> 0)   0.184 us    |                  __legitimize_mnt();</span><br><span class="line"> 0)   0.527 us    |                &#125;</span><br><span class="line"> 0)   0.179 us    |                legitimize_root();</span><br><span class="line"> 0)   0.179 us    |                rcu_read_unlock_strict();</span><br><span class="line"> 0)   1.883 us    |              &#125;</span><br><span class="line"> 0)   2.212 us    |            &#125;</span><br><span class="line"> 0)               |            may_open() &#123;</span><br><span class="line"> 0)               |              inode_permission() &#123;</span><br><span class="line"> 0)               |                inode_permission.part.0() &#123;</span><br><span class="line"> 0)   0.199 us    |                  generic_permission();</span><br><span class="line"> 0)   0.179 us    |                  security_inode_permission();</span><br><span class="line"> 0)   0.856 us    |                &#125;</span><br><span class="line"> 0)   1.174 us    |              &#125;</span><br><span class="line"> 0)   1.543 us    |            &#125;</span><br><span class="line"> 0)               |            vfs_open() &#123;</span><br><span class="line"> 0)               |              do_dentry_open() &#123;</span><br><span class="line"> 0)               |                path_get() &#123;</span><br><span class="line"> 0)   0.180 us    |                  mntget();</span><br><span class="line"> 0)   0.512 us    |                &#125;</span><br><span class="line"> 0)   0.180 us    |                try_module_get();</span><br><span class="line"> 0)               |                security_file_open() &#123;</span><br><span class="line"> 0)   0.327 us    |                  __fsnotify_parent();</span><br><span class="line"> 0)   0.722 us    |                &#125;</span><br><span class="line"> 0)               |                ext4_file_open [ext4]() &#123;</span><br><span class="line"> 0)   0.249 us    |                  ext4_sample_last_mounted [ext4]();</span><br><span class="line"> 0)               |                  dquot_file_open() &#123;</span><br><span class="line"> 0)   0.239 us    |                    generic_file_open();</span><br><span class="line"> 0)   0.707 us    |                  &#125;</span><br><span class="line"> 0)   1.597 us    |                &#125;</span><br><span class="line"> 0)   0.744 us    |                file_ra_state_init();</span><br><span class="line"> 0)   5.942 us    |              &#125;</span><br><span class="line"> 0)   6.365 us    |            &#125;</span><br><span class="line"> 0)               |            ima_file_check() &#123;</span><br><span class="line"> 0)   0.326 us    |              security_task_getsecid();</span><br><span class="line"> 0)   0.216 us    |              process_measurement();</span><br><span class="line"> 0)   1.161 us    |            &#125;</span><br><span class="line"> 0) + 12.117 us   |          &#125;</span><br><span class="line"> 0)               |          terminate_walk() &#123;</span><br><span class="line"> 0)               |            dput() &#123;</span><br><span class="line"> 0)   0.182 us    |              rcu_read_unlock_strict();</span><br><span class="line"> 0)   0.525 us    |            &#125;</span><br><span class="line"> 0)               |            mntput() &#123;</span><br><span class="line"> 0)               |              mntput_no_expire() &#123;</span><br><span class="line"> 0)   0.179 us    |                rcu_read_unlock_strict();</span><br><span class="line"> 0)   0.518 us    |              &#125;</span><br><span class="line"> 0)   0.843 us    |            &#125;</span><br><span class="line"> 0)   1.851 us    |          &#125;</span><br><span class="line"> 0) + 29.215 us   |        &#125;</span><br><span class="line"> 0) + 29.607 us   |      &#125;</span><br><span class="line"> 0)   0.198 us    |      __fsnotify_parent();</span><br><span class="line"> 0)               |      fd_install() &#123;</span><br><span class="line"> 0)   0.178 us    |        __fd_install();</span><br><span class="line"> 0)   0.569 us    |      &#125;</span><br><span class="line"> 0)               |      putname() &#123;</span><br><span class="line"> 0)   0.187 us    |        kmem_cache_free();</span><br><span class="line"> 0)   0.593 us    |      &#125;</span><br><span class="line"> 0) + 37.556 us   |    &#125;</span><br><span class="line"> 0) + 38.021 us   |  &#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>vim个性化主题配置</title>
    <url>/posts/9e0ab315/</url>
    <content><![CDATA[<p>以molokai主题为例，新建文件<code>~/.vim/colors/molokai.vim</code>，文件内容如下：</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hi clear</span><br><span class="line">if version &gt; 580</span><br><span class="line">    hi clear</span><br><span class="line">    if exists(&quot;syntax_on&quot;)</span><br><span class="line">        syntax reset</span><br><span class="line">    endif</span><br><span class="line">endif</span><br><span class="line">let g:colors_name=&quot;molokai&quot;</span><br><span class="line"></span><br><span class="line">if exists(&quot;g:molokai_original&quot;)</span><br><span class="line">    let s:molokai_original = g:molokai_original</span><br><span class="line">else</span><br><span class="line">    let s:molokai_original = 0</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">hi Boolean         guifg=#AE81FF</span><br><span class="line">hi Character       guifg=#E6DB74</span><br><span class="line">hi Number          guifg=#AE81FF</span><br><span class="line">hi String          guifg=#E6DB74</span><br><span class="line">hi Conditional     guifg=#F92672               gui=bold</span><br><span class="line">hi Constant        guifg=#AE81FF               gui=bold</span><br><span class="line">hi Cursor          guifg=#000000 guibg=#F8F8F0</span><br><span class="line">hi iCursor         guifg=#000000 guibg=#F8F8F0</span><br><span class="line">hi Debug           guifg=#BCA3A3               gui=bold</span><br><span class="line">hi Define          guifg=#66D9EF</span><br><span class="line">hi Delimiter       guifg=#8F8F8F</span><br><span class="line">hi DiffAdd                       guibg=#13354A</span><br><span class="line">hi DiffChange      guifg=#89807D guibg=#4C4745</span><br><span class="line">hi DiffDelete      guifg=#960050 guibg=#1E0010</span><br><span class="line">hi DiffText                      guibg=#4C4745 gui=italic,bold</span><br><span class="line"></span><br><span class="line">hi Directory       guifg=#A6E22E               gui=bold</span><br><span class="line">hi Error           guifg=#E6DB74 guibg=#1E0010</span><br><span class="line">hi ErrorMsg        guifg=#F92672 guibg=#232526 gui=bold</span><br><span class="line">hi Exception       guifg=#A6E22E               gui=bold</span><br><span class="line">hi Float           guifg=#AE81FF</span><br><span class="line">hi FoldColumn      guifg=#465457 guibg=#000000</span><br><span class="line">hi Folded          guifg=#465457 guibg=#000000</span><br><span class="line">hi Function        guifg=#A6E22E</span><br><span class="line">hi Identifier      guifg=#FD971F</span><br><span class="line">hi Ignore          guifg=#808080 guibg=bg</span><br><span class="line">hi IncSearch       guifg=#C4BE89 guibg=#000000</span><br><span class="line"></span><br><span class="line">hi Keyword         guifg=#F92672               gui=bold</span><br><span class="line">hi Label           guifg=#E6DB74               gui=none</span><br><span class="line">hi Macro           guifg=#C4BE89               gui=italic</span><br><span class="line">hi SpecialKey      guifg=#66D9EF               gui=italic</span><br><span class="line"></span><br><span class="line">hi MatchParen      guifg=#000000 guibg=#FD971F gui=bold</span><br><span class="line">hi ModeMsg         guifg=#E6DB74</span><br><span class="line">hi MoreMsg         guifg=#E6DB74</span><br><span class="line">hi Operator        guifg=#F92672</span><br><span class="line"></span><br><span class="line">hi Pmenu           guifg=#66D9EF guibg=#000000</span><br><span class="line">hi PmenuSel                      guibg=#808080</span><br><span class="line">hi PmenuSbar                     guibg=#080808</span><br><span class="line">hi PmenuThumb      guifg=#66D9EF</span><br><span class="line"></span><br><span class="line">hi PreCondit       guifg=#A6E22E               gui=bold</span><br><span class="line">hi PreProc         guifg=#A6E22E</span><br><span class="line">hi Question        guifg=#66D9EF</span><br><span class="line">hi Repeat          guifg=#F92672               gui=bold</span><br><span class="line">hi Search          guifg=#000000 guibg=#FFE792</span><br><span class="line">hi SignColumn      guifg=#A6E22E guibg=#232526</span><br><span class="line">hi SpecialChar     guifg=#F92672               gui=bold</span><br><span class="line">hi SpecialComment  guifg=#7E8E91               gui=bold</span><br><span class="line">hi Special         guifg=#66D9EF guibg=bg      gui=italic</span><br><span class="line">if has(&quot;spell&quot;)</span><br><span class="line">    hi SpellBad    guisp=#FF0000 gui=undercurl</span><br><span class="line">    hi SpellCap    guisp=#7070F0 gui=undercurl</span><br><span class="line">    hi SpellLocal  guisp=#70F0F0 gui=undercurl</span><br><span class="line">    hi SpellRare   guisp=#FFFFFF gui=undercurl</span><br><span class="line">endif</span><br><span class="line">hi Statement       guifg=#F92672               gui=bold</span><br><span class="line">hi StatusLine      guifg=#455354 guibg=fg</span><br><span class="line">hi StatusLineNC    guifg=#808080 guibg=#080808</span><br><span class="line">hi StorageClass    guifg=#FD971F               gui=italic</span><br><span class="line">hi Structure       guifg=#66D9EF</span><br><span class="line">hi Tag             guifg=#F92672               gui=italic</span><br><span class="line">hi Title           guifg=#ef5939</span><br><span class="line">hi Todo            guifg=#FFFFFF guibg=bg      gui=bold</span><br><span class="line"></span><br><span class="line">hi Typedef         guifg=#66D9EF</span><br><span class="line">hi Type            guifg=#66D9EF               gui=none</span><br><span class="line">hi Underlined      guifg=#808080               gui=underline</span><br><span class="line"></span><br><span class="line">hi VertSplit       guifg=#808080 guibg=#080808 gui=bold</span><br><span class="line">hi VisualNOS                     guibg=#403D3D</span><br><span class="line">hi Visual                        guibg=#403D3D</span><br><span class="line">hi WarningMsg      guifg=#FFFFFF guibg=#333333 gui=bold</span><br><span class="line">hi WildMenu        guifg=#66D9EF guibg=#000000</span><br><span class="line"></span><br><span class="line">hi TabLineFill     guifg=#1B1D1E guibg=#1B1D1E</span><br><span class="line">hi TabLine         guibg=#1B1D1E guifg=#808080 gui=none</span><br><span class="line"></span><br><span class="line">if s:molokai_original == 1</span><br><span class="line">   hi Normal          guifg=#F8F8F2 guibg=#272822</span><br><span class="line">   hi Comment         guifg=#75715E</span><br><span class="line">   hi CursorLine                    guibg=#3E3D32</span><br><span class="line">   hi CursorLineNr    guifg=#FD971F               gui=none</span><br><span class="line">   hi CursorColumn                  guibg=#3E3D32</span><br><span class="line">   hi ColorColumn                   guibg=#3B3A32</span><br><span class="line">   hi LineNr          guifg=#BCBCBC guibg=#3B3A32</span><br><span class="line">   hi NonText         guifg=#75715E</span><br><span class="line">   hi SpecialKey      guifg=#75715E</span><br><span class="line">else</span><br><span class="line">   hi Normal          guifg=#F8F8F2 guibg=#1B1D1E</span><br><span class="line">   hi Comment         guifg=#7E8E91</span><br><span class="line">   hi CursorLine                    guibg=#293739</span><br><span class="line">   hi CursorLineNr    guifg=#FD971F               gui=none</span><br><span class="line">   hi CursorColumn                  guibg=#293739</span><br><span class="line">   hi ColorColumn                   guibg=#232526</span><br><span class="line">   hi LineNr          guifg=#465457 guibg=#232526</span><br><span class="line">   hi NonText         guifg=#465457</span><br><span class="line">   hi SpecialKey      guifg=#465457</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">if &amp;t_Co &gt; 255</span><br><span class="line">   if s:molokai_original == 1</span><br><span class="line">      hi Normal                   ctermbg=234</span><br><span class="line">      hi CursorLine               ctermbg=235   cterm=none</span><br><span class="line">      hi CursorLineNr ctermfg=208               cterm=none</span><br><span class="line">   else</span><br><span class="line">      hi Normal       ctermfg=252 ctermbg=233</span><br><span class="line">      hi CursorLine               ctermbg=234   cterm=none</span><br><span class="line">      hi CursorLineNr ctermfg=208               cterm=none</span><br><span class="line">   endif</span><br><span class="line">   hi Boolean         ctermfg=135</span><br><span class="line">   hi Character       ctermfg=144</span><br><span class="line">   hi Number          ctermfg=135</span><br><span class="line">   hi String          ctermfg=144</span><br><span class="line">   hi Conditional     ctermfg=161               cterm=bold</span><br><span class="line">   hi Constant        ctermfg=135               cterm=bold</span><br><span class="line">   hi Cursor          ctermfg=16  ctermbg=253</span><br><span class="line">   hi Debug           ctermfg=225               cterm=bold</span><br><span class="line">   hi Define          ctermfg=81</span><br><span class="line">   hi Delimiter       ctermfg=241</span><br><span class="line"></span><br><span class="line">   hi DiffAdd                     ctermbg=24</span><br><span class="line">   hi DiffChange      ctermfg=181 ctermbg=239</span><br><span class="line">   hi DiffDelete      ctermfg=162 ctermbg=53</span><br><span class="line">   hi DiffText                    ctermbg=102 cterm=bold</span><br><span class="line"></span><br><span class="line">   hi Directory       ctermfg=118               cterm=bold</span><br><span class="line">   hi Error           ctermfg=219 ctermbg=89</span><br><span class="line">   hi ErrorMsg        ctermfg=199 ctermbg=16    cterm=bold</span><br><span class="line">   hi Exception       ctermfg=118               cterm=bold</span><br><span class="line">   hi Float           ctermfg=135</span><br><span class="line">   hi FoldColumn      ctermfg=67  ctermbg=16</span><br><span class="line">   hi Folded          ctermfg=67  ctermbg=16</span><br><span class="line">   hi Function        ctermfg=118</span><br><span class="line">   hi Identifier      ctermfg=208               cterm=none</span><br><span class="line">   hi Ignore          ctermfg=244 ctermbg=232</span><br><span class="line">   hi IncSearch       ctermfg=193 ctermbg=16</span><br><span class="line"></span><br><span class="line">   hi keyword         ctermfg=161               cterm=bold</span><br><span class="line">   hi Label           ctermfg=229               cterm=none</span><br><span class="line">   hi Macro           ctermfg=193</span><br><span class="line">   hi SpecialKey      ctermfg=81</span><br><span class="line"></span><br><span class="line">   hi MatchParen      ctermfg=233  ctermbg=208 cterm=bold</span><br><span class="line">   hi ModeMsg         ctermfg=229</span><br><span class="line">   hi MoreMsg         ctermfg=229</span><br><span class="line">   hi Operator        ctermfg=161</span><br><span class="line"></span><br><span class="line">   hi Pmenu           ctermfg=81  ctermbg=16</span><br><span class="line">   hi PmenuSel        ctermfg=255 ctermbg=242</span><br><span class="line">   hi PmenuSbar                   ctermbg=232</span><br><span class="line">   hi PmenuThumb      ctermfg=81</span><br><span class="line"></span><br><span class="line">   hi PreCondit       ctermfg=118               cterm=bold</span><br><span class="line">   hi PreProc         ctermfg=118</span><br><span class="line">   hi Question        ctermfg=81</span><br><span class="line">   hi Repeat          ctermfg=161               cterm=bold</span><br><span class="line">   hi Search          ctermfg=0   ctermbg=222   cterm=NONE</span><br><span class="line"></span><br><span class="line">   hi SignColumn      ctermfg=118 ctermbg=235</span><br><span class="line">   hi SpecialChar     ctermfg=161               cterm=bold</span><br><span class="line">   hi SpecialComment  ctermfg=245               cterm=bold</span><br><span class="line">   hi Special         ctermfg=81</span><br><span class="line">   if has(&quot;spell&quot;)</span><br><span class="line">       hi SpellBad                ctermbg=52 cterm=underline</span><br><span class="line">       hi SpellCap                ctermbg=17 cterm=underline</span><br><span class="line">       hi SpellLocal              ctermbg=17 cterm=underline</span><br><span class="line">       hi SpellRare  ctermfg=none ctermbg=none  cterm=reverse</span><br><span class="line">   endif</span><br><span class="line">   hi Statement       ctermfg=161               cterm=bold</span><br><span class="line">   hi StatusLine      ctermfg=238 ctermbg=253</span><br><span class="line">   hi StatusLineNC    ctermfg=244 ctermbg=232</span><br><span class="line">   hi StorageClass    ctermfg=208</span><br><span class="line">   hi Structure       ctermfg=81</span><br><span class="line">   hi Tag             ctermfg=161</span><br><span class="line">   hi Title           ctermfg=166</span><br><span class="line">   hi Todo            ctermfg=231 ctermbg=232   cterm=bold</span><br><span class="line"></span><br><span class="line">   hi Typedef         ctermfg=81</span><br><span class="line">   hi Type            ctermfg=81                cterm=none</span><br><span class="line">   hi Underlined      ctermfg=244               cterm=underline</span><br><span class="line"></span><br><span class="line">   hi VertSplit       ctermfg=244 ctermbg=232   cterm=bold</span><br><span class="line">   hi VisualNOS                   ctermbg=238</span><br><span class="line">   hi Visual                      ctermbg=235</span><br><span class="line">   hi WarningMsg      ctermfg=231 ctermbg=238   cterm=bold</span><br><span class="line">   hi WildMenu        ctermfg=81  ctermbg=16</span><br><span class="line"></span><br><span class="line">   hi Comment         ctermfg=59</span><br><span class="line">   hi CursorColumn                ctermbg=236</span><br><span class="line">   hi ColorColumn                 ctermbg=236</span><br><span class="line">   hi LineNr          ctermfg=250 ctermbg=236</span><br><span class="line">   hi NonText         ctermfg=59</span><br><span class="line"></span><br><span class="line">   hi SpecialKey      ctermfg=59</span><br><span class="line"></span><br><span class="line">   if exists(&quot;g:rehash256&quot;) &amp;&amp; g:rehash256 == 1</span><br><span class="line">       hi Normal       ctermfg=252 ctermbg=234</span><br><span class="line">       hi CursorLine               ctermbg=236   cterm=none</span><br><span class="line">       hi CursorLineNr ctermfg=208               cterm=none</span><br><span class="line"></span><br><span class="line">       hi Boolean         ctermfg=141</span><br><span class="line">       hi Character       ctermfg=222</span><br><span class="line">       hi Number          ctermfg=141</span><br><span class="line">       hi String          ctermfg=222</span><br><span class="line">       hi Conditional     ctermfg=197               cterm=bold</span><br><span class="line">       hi Constant        ctermfg=141               cterm=bold</span><br><span class="line"></span><br><span class="line">       hi DiffDelete      ctermfg=125 ctermbg=233</span><br><span class="line"></span><br><span class="line">       hi Directory       ctermfg=154               cterm=bold</span><br><span class="line">       hi Error           ctermfg=222 ctermbg=233</span><br><span class="line">       hi Exception       ctermfg=154               cterm=bold</span><br><span class="line">       hi Float           ctermfg=141</span><br><span class="line">       hi Function        ctermfg=154</span><br><span class="line">       hi Identifier      ctermfg=208</span><br><span class="line"></span><br><span class="line">       hi Keyword         ctermfg=197               cterm=bold</span><br><span class="line">       hi Operator        ctermfg=197</span><br><span class="line">       hi PreCondit       ctermfg=154               cterm=bold</span><br><span class="line">       hi PreProc         ctermfg=154</span><br><span class="line">       hi Repeat          ctermfg=197               cterm=bold</span><br><span class="line"></span><br><span class="line">       hi Statement       ctermfg=197               cterm=bold</span><br><span class="line">       hi Tag             ctermfg=197</span><br><span class="line">       hi Title           ctermfg=203</span><br><span class="line">       hi Visual                      ctermbg=238</span><br><span class="line"></span><br><span class="line">       hi Comment         ctermfg=244</span><br><span class="line">       hi LineNr          ctermfg=239 ctermbg=235</span><br><span class="line">       hi NonText         ctermfg=239</span><br><span class="line">       hi SpecialKey      ctermfg=239</span><br><span class="line">   endif</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">set background=dark</span><br></pre></td></tr></table></figure>

<p>修改<code>~/.vimrc</code>，增加如下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set nocompatible              &quot; be iMproved, required</span><br><span class="line">filetype off                  &quot; required</span><br><span class="line"></span><br><span class="line">syntax enable</span><br><span class="line">let g:solarized_termcolors=256</span><br><span class="line">set background=dark</span><br><span class="line">colorscheme molokai</span><br><span class="line"></span><br><span class="line">filetype on</span><br><span class="line">filetype indent on</span><br><span class="line">filetype plugin on</span><br><span class="line">filetype plugin indent on</span><br><span class="line"></span><br><span class="line">set listchars=tab:&gt;-,trail:-</span><br><span class="line">set list</span><br><span class="line"></span><br><span class="line">set nu</span><br><span class="line">set mouse=a</span><br><span class="line"></span><br><span class="line">set autoread</span><br><span class="line">set wildignore=*.swp,*.bak,*.pyc,*.class,.svn</span><br><span class="line">set showmatch</span><br><span class="line">set incsearch</span><br><span class="line">set smartcase</span><br><span class="line">set tabstop=8</span><br><span class="line">set hidden</span><br><span class="line">set wildmode=list:longest</span><br><span class="line">set ttyfast</span><br><span class="line"></span><br><span class="line">set encoding=utf-8</span><br><span class="line">set ffs=unix,dos,mac</span><br><span class="line">set completeopt=longest,menu</span><br><span class="line"></span><br><span class="line">let t_Co = 256</span><br><span class="line"></span><br><span class="line">let g:molokai_original = 1</span><br><span class="line">let g:rehash256 = 1</span><br><span class="line">set background=dark</span><br><span class="line"></span><br><span class="line">hi Comment	guifg=#ffff00 ctermfg=226 cterm=none</span><br><span class="line"></span><br><span class="line">autocmd FileType mail set nopaste tw=72 spell</span><br><span class="line"></span><br><span class="line">highlight clear SpellBad</span><br><span class="line">highlight SpellBad term=standout ctermfg=1 term=underline cterm=underline</span><br><span class="line">highlight clear SpellCap</span><br><span class="line">highlight SpellCap term=underline cterm=underline</span><br><span class="line">highlight clear SpellRare</span><br><span class="line">highlight SpellRare term=underline cterm=underline</span><br><span class="line">highlight clear SpellLocal</span><br><span class="line">highlight SpellLocal term=underline cterm=underline</span><br><span class="line"></span><br><span class="line">if v:lang =~ &quot;utf8$&quot; || v:lang =~ &quot;UTF-8$&quot;</span><br><span class="line">   set fileencodings=ucs-bom,utf-8,latin1</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">set nocompatible	&quot; Use Vim defaults (much better!)</span><br><span class="line">set bs=indent,eol,start		&quot; allow backspacing over everything in insert mode</span><br><span class="line">set viminfo=&#x27;20,\&quot;50	&quot; read/write a .viminfo file, don&#x27;t store more</span><br><span class="line">			&quot; than 50 lines of registers</span><br><span class="line">set history=100</span><br><span class="line">set ruler		&quot; show the cursor position all the time</span><br><span class="line">set nu</span><br><span class="line">set hlsearch</span><br><span class="line"></span><br><span class="line">set colorcolumn=81</span><br><span class="line">set mouse=a</span><br><span class="line">set listchars=tab:&gt;-,trail:-</span><br><span class="line">set list</span><br><span class="line">set nobackup</span><br><span class="line">set noswapfile</span><br><span class="line"></span><br><span class="line">set wildignore=*.swp,*.bak,*.pyc,*.class,.svn</span><br><span class="line"></span><br><span class="line">set cursorcolumn</span><br><span class="line">set cursorline</span><br><span class="line"></span><br><span class="line">set t_ti= t_te=</span><br><span class="line"></span><br><span class="line">set title</span><br><span class="line">set novisualbell</span><br><span class="line">set noerrorbells</span><br><span class="line">set t_vb=</span><br><span class="line">set tm=500</span><br><span class="line"></span><br><span class="line">set viminfo^=%</span><br><span class="line">set ruler</span><br><span class="line">set showcmd</span><br><span class="line">set showmode</span><br><span class="line"></span><br><span class="line">set scrolloff=3</span><br><span class="line">set statusline=%&lt;%f\ %h%m%r%=%k[%&#123;(&amp;fenc==\&quot;\&quot;)?&amp;enc:&amp;fenc&#125;%&#123;(&amp;bomb?\&quot;,BOM\&quot;:\&quot;\&quot;)&#125;]\ %-14.(%l,%c%V%)\ %P</span><br><span class="line">set laststatus=2</span><br><span class="line">if has(&quot;autocmd&quot;)</span><br><span class="line">  augroup redhat</span><br><span class="line">  autocmd!</span><br><span class="line">  autocmd BufReadPost *</span><br><span class="line">  \ if line(&quot;&#x27;\&quot;&quot;) &gt; 0 &amp;&amp; line (&quot;&#x27;\&quot;&quot;) &lt;= line(&quot;$&quot;) |</span><br><span class="line">  \   exe &quot;normal! g&#x27;\&quot;&quot; |</span><br><span class="line">  \ endif</span><br><span class="line">  autocmd BufNewFile,BufReadPre /media/*,/run/media/*,/mnt/* set directory=~/tmp,/var/tmp,/tmp</span><br><span class="line">  autocmd BufNewFile *.spec 0r /usr/share/vim/vimfiles/template.spec</span><br><span class="line">  augroup END</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">if &amp;t_Co &gt; 2 || has(&quot;gui_running&quot;)</span><br><span class="line">  syntax on</span><br><span class="line">  set hlsearch</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">filetype plugin on</span><br><span class="line"></span><br><span class="line">if &amp;term==&quot;xterm&quot;</span><br><span class="line">     set t_Co=8</span><br><span class="line">     set t_Sb=m</span><br><span class="line">     set t_Sf=m</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">let &amp;guicursor = &amp;guicursor . &quot;,a:blinkon0&quot;</span><br><span class="line">set nomodeline</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>ARM64使用kernel 6.6.7启动日志</title>
    <url>/posts/db9f248e/</url>
    <content><![CDATA[<p>– BIOS boot done –<br>[    0.000000] Booting Linux on physical CPU 0x0100000000 [0x410fd8e0]<br>[    0.000000] Linux version 6.6.7+ (<a href="mailto:&#x72;&#111;&#111;&#116;&#64;&#106;&#54;&#x36;&#x65;&#x30;&#x31;&#x32;&#57;&#49;&#46;&#x73;&#x71;&#x61;&#46;&#101;&#x75;&#x39;&#x35;">&#x72;&#111;&#111;&#116;&#64;&#106;&#54;&#x36;&#x65;&#x30;&#x31;&#x32;&#57;&#49;&#46;&#x73;&#x71;&#x61;&#46;&#101;&#x75;&#x39;&#x35;</a>) (gcc (GCC) 10.2.1 20200825 (Alibaba 10.2.1-3 2.17), GNU ld version 2.35-12.2.alios7) #13 SMP Wed Feb 21 15:11:08 CST 2024<br>[    0.000000] KASLR disabled due to lack of seed<br>[    0.000000] earlycon: pl11 at MMIO 0x000000002a401000 (options ‘’)<br>[    0.000000] printk: bootconsole [pl11] enabled<br>[    0.000000] efi: need at least one option<br>[    0.000000] Malformed early option ‘efi’<br>[    0.000000] efi: EFI v2.7 by EDK II<br>[    0.000000] efi: SMBIOS 3.0&#x3D;0xf9810000 ACPI 2.0&#x3D;0xf4530018 MEMATTR&#x3D;0xf7ca7018 INITRD&#x3D;0xf40f7f18 MEMRESERVE&#x3D;0xf40f7f98<br>[    0.000000] ACPI: Early table checksum verification disabled<br>[    0.000000] ACPI: RSDP 0x00000000F4530018 000024 (v02 PTG   )<br>[    0.000000] ACPI: XSDT 0x00000000F453FE98 000094 (v01 PTG    PTG01    00000000 “ “  01000013)<br>[    0.000000] ACPI: FACP 0x00000000F453FB98 000114 (v06 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: DSDT 0x00000000F4537518 006A14 (v02 PTG    PTG01    00000000 INTL 20230331)<br>[    0.000000] ACPI: AGDI 0x00000000F453FF98 000030 (v00 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: DBG2 0x00000000F453FA98 00005E (v00 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: GTDT 0x00000000F453E998 000104 (v03 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: MCFG 0x00000000F453FE18 00003C (v01 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: SLIT 0x00000000F453F998 00003C (v01 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: SPCR 0x00000000F453FA18 000050 (v02 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: SDEI 0x00000000F453FD18 000024 (v01 PTG    PTG01    00000000 INTL 20230331)<br>[    0.000000] ACPI: APIC 0x00000000F453F598 000334 (v05 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: SRAT 0x00000000F453EB18 000140 (v03 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: IORT 0x00000000F453F318 00012C (v00 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: PPTT 0x00000000F453EC98 0003E6 (v02 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: MPAM 0x00000000F4530098 0004A4 (v00 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: SPMI 0x00000000F453FD98 000041 (v05 PTG    PTG01    00000000 PTG  20200717)<br>[    0.000000] ACPI: SPCR: console: pl011,mmio32,0x2a400000,115200<br>[    0.000000] ACPI: SRAT: Node 0 PXM 0 [mem 0x80000000-0xffffffff]<br>[    0.000000] ACPI: SRAT: Node 0 PXM 0 [mem 0x900000000-0x187fffffff]<br>[    0.000000] NUMA: NODE_DATA [mem 0x1877fc1b00-0x1877fc6fff]</p>
<span id="more"></span>
<p>[    0.000000] Zone ranges:<br>[    0.000000]   DMA      [mem 0x0000000080000000-0x00000000ffffffff]<br>[    0.000000]   DMA32    empty<br>[    0.000000]   Normal   [mem 0x0000000100000000-0x000000187fffffff]<br>[    0.000000]   Device   empty<br>[    0.000000] Movable zone start for each node<br>[    0.000000] Early memory node ranges<br>[    0.000000]   node   0: [mem 0x0000000080000000-0x00000000f3e2ffff]<br>[    0.000000]   node   0: [mem 0x00000000f3e30000-0x00000000f3f1ffff]<br>[    0.000000]   node   0: [mem 0x00000000f3f20000-0x00000000f401ffff]<br>[    0.000000]   node   0: [mem 0x00000000f4020000-0x00000000f406ffff]<br>[    0.000000]   node   0: [mem 0x00000000f4070000-0x00000000f42effff]<br>[    0.000000]   node   0: [mem 0x00000000f42f0000-0x00000000f452ffff]<br>[    0.000000]   node   0: [mem 0x00000000f4530000-0x00000000f453ffff]<br>[    0.000000]   node   0: [mem 0x00000000f4540000-0x00000000f47bffff]<br>[    0.000000]   node   0: [mem 0x00000000f47c0000-0x00000000f978ffff]<br>[    0.000000]   node   0: [mem 0x00000000f9790000-0x00000000f97cffff]<br>[    0.000000]   node   0: [mem 0x00000000f97d0000-0x00000000f97effff]<br>[    0.000000]   node   0: [mem 0x00000000f97f0000-0x00000000f982ffff]<br>[    0.000000]   node   0: [mem 0x00000000f9830000-0x00000000fedfffff]<br>[    0.000000]   node   0: [mem 0x00000000ff600000-0x00000000ff60ffff]<br>[    0.000000]   node   0: [mem 0x0000000900000000-0x000000187fffffff]<br>[    0.000000] Initmem setup node 0 [mem 0x0000000080000000-0x000000187fffffff]<br>[    0.000000] On node 0, zone DMA: 2048 pages in unavailable ranges<br>[    0.000000] On node 0, zone Normal: 2544 pages in unavailable ranges<br>[    0.000000] cma: Reserved 64 MiB at 0x00000000fae00000 on node -1<br>[    0.000000] psci: probing for conduit method from ACPI.<br>[    0.000000] psci: PSCIv1.1 detected in firmware.<br>[    0.000000] psci: Using standard PSCI v0.2 function IDs<br>[    0.000000] psci: MIGRATE_INFO_TYPE not supported.<br>[    0.000000] psci: SMC Calling Convention v1.2<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x100000000 -&gt; Node 0<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x1000c0000 -&gt; Node 0<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x1001e0000 -&gt; Node 0<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x1002e0000 -&gt; Node 0<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x200000000 -&gt; Node 0<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x2000c0000 -&gt; Node 0<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x2001e0000 -&gt; Node 0<br>[    0.000000] ACPI: NUMA: SRAT: PXM 0 -&gt; MPIDR 0x2002e0000 -&gt; Node 0<br>[    0.000000] Large number of MPIDR hash buckets detected<br>[    0.000000] percpu: Embedded 32 pages&#x2F;cpu s90856 r8192 d32024 u131072<br>[    0.000000] pcpu-alloc: s90856 r8192 d32024 u131072 alloc&#x3D;32*4096<br>[    0.000000] pcpu-alloc: [0] 0 [0] 1 [0] 2 [0] 3 [0] 4 [0] 5 [0] 6 [0] 7<br>[    0.000000] Detected PIPT I-cache on CPU0<br>[    0.000000] CPU features: detected: GIC system register CPU interface<br>[    0.000000] CPU features: detected: HCRX_EL2 register<br>[    0.000000] CPU features: detected: Virtualization Host Extensions<br>[    0.000000] CPU features: detected: Hardware dirty bit management<br>[    0.000000] CPU features: detected: Spectre-v4<br>[    0.000000] alternatives: applying boot alternatives<br>[    0.000000] Kernel command line: kernel initrd&#x3D;initrd rdinit&#x3D;&#x2F;sbin&#x2F;init earlycon&#x3D;pl011,0x2A401000  acpi&#x3D;force console&#x3D;ttyAMA0,115200 rootwait verbose debug initcall_debug efi &#x3D;debug cryptomgr.notests<br>[    0.000000] Unknown kernel command line parameters “verbose &#x3D;debug”, will be passed to user space.<br>[    0.000000] Dentry cache hash table entries: 8388608 (order: 14, 67108864 bytes, linear)<br>[    0.000000] Inode-cache hash table entries: 4194304 (order: 13, 33554432 bytes, linear)<br>[    0.000000] Fallback order for Node 0: 0<br>[    0.000000] Built 1 zonelists, mobility grouping on.  Total pages: 16510480<br>[    0.000000] Policy zone: Normal<br>[    0.000000] mem auto-init: stack:off, heap alloc:off, heap free:off<br>[    0.000000] software IO TLB: area num 8.<br>[    0.000000] software IO TLB: mapped [mem 0x00000000ee0d0000-0x00000000f20d0000] (64MB)<br>[    0.000000] Memory: 65602268K&#x2F;67090496K available (18432K kernel code, 5682K rwdata, 6692K rodata, 6912K init, 2354K bss, 1422692K reserved, 65536K cma-reserved)<br>[    0.000000] SLUB: HWalign&#x3D;64, Order&#x3D;0-3, MinObjects&#x3D;0, CPUs&#x3D;8, Nodes&#x3D;1<br>[    0.000000] ftrace: allocating 63831 entries in 250 pages<br>[    0.000000] ftrace: allocated 250 pages with 6 groups<br>[    0.000000] trace event string verifier disabled<br>[    0.000000] rcu: Hierarchical RCU implementation.<br>[    0.000000] rcu: 	RCU restricting CPUs from NR_CPUS&#x3D;1024 to nr_cpu_ids&#x3D;8.<br>[    0.000000] 	Rude variant of Tasks RCU enabled.<br>[    0.000000] 	Tracing variant of Tasks RCU enabled.<br>[    0.000000] rcu: RCU calculated value of scheduler-enlistment delay is 25 jiffies.<br>[    0.000000] rcu: Adjusting geometry for rcu_fanout_leaf&#x3D;16, nr_cpu_ids&#x3D;8<br>[    0.000000] NR_IRQS: 64, nr_irqs: 64, preallocated irqs: 0<br>[    0.000000] GICv3: GIC: Using split EOI&#x2F;Deactivate mode<br>[    0.000000] GIC: enabling workaround for GICv3: ARM64 erratum 2941627<br>[    0.000000] GICv3: 960 SPIs implemented<br>[    0.000000] GICv3: 1024 Extended SPIs implemented<br>[    0.000000] Root IRQ handler: gic_handle_irq<br>[    0.000000] GICv3: GICv3 features: 16 PPIs, DirectLPI<br>[    0.000000] GICv3: GICv4 features: DirectLPI RVPEID Valid+Dirty<br>[    0.000000] GICv3: CPU0: found redistributor 100000000 region 0:0x00000002c0080000<br>[    0.000000] SRAT: PXM 0 -&gt; ITS 0 -&gt; Node 0<br>[    0.000000] SRAT: PXM 0 -&gt; ITS 1 -&gt; Node 0<br>[    0.000000] SRAT: PXM 0 -&gt; ITS 2 -&gt; Node 0<br>[    0.000000] SRAT: PXM 0 -&gt; ITS 3 -&gt; Node 0<br>[    0.000000] ITS [mem 0x1a040000-0x1a05ffff]<br>[    0.000000] ITS@0x000000001a040000: Single VMOVP capable<br>[    0.000000] ITS@0x000000001a040000: Using GICv4.1 mode 00000000 00000001<br>[    0.000000] ITS@0x000000001a040000: allocated 8192 Devices @900250000 (indirect, esz 8, psz 64K, shr 1)<br>[    0.000000] ITS@0x000000001a040000: allocated 32768 Interrupt Collections @900260000 (flat, esz 2, psz 64K, shr 1)<br>[    0.000000] ITS@0x000000001a040000: allocated 8192 Virtual CPUs @900270000 (flat, esz 8, psz 64K, shr 1)<br>[    0.000000] ITS [mem 0x1a080000-0x1a09ffff]<br>[    0.000000] ITS@0x000000001a080000: Single VMOVP capable<br>[    0.000000] ITS@0x000000001a080000: Using GICv4.1 mode 00000000 00000001<br>[    0.000000] ITS@0x000000001a080000: allocated 8192 Devices @900290000 (indirect, esz 8, psz 64K, shr 1)<br>[    0.000000] ITS@0x000000001a080000: allocated 32768 Interrupt Collections @9002a0000 (flat, esz 2, psz 64K, shr 1)<br>[    0.000000] ITS [mem 0x1a0c0000-0x1a0dffff]<br>[    0.000000] ITS@0x000000001a0c0000: Single VMOVP capable<br>[    0.000000] ITS@0x000000001a0c0000: Using GICv4.1 mode 00000000 00000001<br>[    0.000000] ITS@0x000000001a0c0000: allocated 8192 Devices @9002c0000 (indirect, esz 8, psz 64K, shr 1)<br>[    0.000000] ITS@0x000000001a0c0000: allocated 32768 Interrupt Collections @9002d0000 (flat, esz 2, psz 64K, shr 1)<br>[    0.000000] ITS [mem 0x1a100000-0x1a11ffff]<br>[    0.000000] ITS@0x000000001a100000: Single VMOVP capable<br>[    0.000000] ITS@0x000000001a100000: Using GICv4.1 mode 00000000 00000001<br>[    0.000000] ITS@0x000000001a100000: allocated 8192 Devices @9002f0000 (indirect, esz 8, psz 64K, shr 1)<br>[    0.000000] ITS@0x000000001a100000: allocated 32768 Interrupt Collections @900300000 (flat, esz 2, psz 64K, shr 1)<br>[    0.000000] GICv3: using LPI property table @0x0000000900310000<br>[    0.000000] ITS: Using DirectLPI for VPE invalidation<br>[    0.000000] ITS: Enabling GICv4 support<br>[    0.000000] GICv3: CPU0: using allocated LPI pending table @0x0000000900320000<br>[    0.000000] rcu: srcu_init: Setting srcu_struct sizes based on contention.<br>[    0.000000] ACPI GTDT: found 1 memory-mapped timer block(s).<br>[    0.000000] arch_timer: cp15 and mmio timer(s) running at 2.00MHz (phys&#x2F;phys).<br>[    0.000000] clocksource: arch_sys_counter: mask: 0xffffffffffffff max_cycles: 0x1d854df40, max_idle_ns: 1763180808480 ns<br>[    0.000024] sched_clock: 56 bits at 2000kHz, resolution 500ns, wraps every 2199023255500ns<br>[    0.028832] calling  con_init+0x0&#x2F;0x220 @ 0<br>[    0.038581] Console: colour dummy device 80x25<br>[    0.046655] initcall con_init+0x0&#x2F;0x220 returned 0 after 4000 usecs<br>[    0.057788] calling  hvc_console_init+0x0&#x2F;0x38 @ 0<br>[    0.066489] initcall hvc_console_init+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    0.078131] calling  univ8250_console_init+0x0&#x2F;0x50 @ 0<br>[    0.087798] initcall univ8250_console_init+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    0.100198] calling  kgdboc_earlycon_late_init+0x0&#x2F;0x40 @ 0<br>[    0.110004] initcall kgdboc_earlycon_late_init+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    0.185810] ACPI: Core revision 20230628<br>[    0.288884] Calibrating delay loop (skipped), value calculated using timer frequency.. 4.00 BogoMIPS (lpj&#x3D;8000)<br>[    0.306738] pid_max: default: 32768 minimum: 301<br>[    0.466803] LSM: initializing lsm&#x3D;capability,selinux,integrity<br>[    0.570097] SELinux:  Initializing.<br>[    0.864474] Mount-cache hash table entries: 131072 (order: 8, 1048576 bytes, linear)<br>[    0.881503] Mountpoint-cache hash table entries: 131072 (order: 8, 1048576 bytes, linear)<br>[    1.076997] RCU Tasks Rude: Setting shift to 3 and lim to 1 rcu_task_cb_adjust&#x3D;1.<br>[    1.092356] RCU Tasks Trace: Setting shift to 3 and lim to 1 rcu_task_cb_adjust&#x3D;1.<br>[    1.107170] calling  trace_init_flags_sys_enter+0x0&#x2F;0x30 @ 1<br>[    1.117761] initcall trace_init_flags_sys_enter+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    1.130975] calling  trace_init_flags_sys_exit+0x0&#x2F;0x30 @ 1<br>[    1.140840] initcall trace_init_flags_sys_exit+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    1.153833] calling  cpu_suspend_init+0x0&#x2F;0x60 @ 1<br>[    1.162724] initcall cpu_suspend_init+0x0&#x2F;0x60 returned 0 after 0 usecs<br>[    1.174430] calling  prevent_bootmem_remove_init+0x0&#x2F;0x68 @ 1<br>[    1.184727] initcall prevent_bootmem_remove_init+0x0&#x2F;0x68 returned 0 after 0 usecs<br>[    1.197922] calling  asids_init+0x0&#x2F;0x98 @ 1<br>[    1.206446] initcall asids_init+0x0&#x2F;0x98 returned 0 after 0 usecs<br>[    1.217167] calling  spawn_ksoftirqd+0x0&#x2F;0x58 @ 1<br>[    1.227720] initcall spawn_ksoftirqd+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    1.239266] calling  init_signal_sysctls+0x0&#x2F;0x48 @ 1<br>[    1.248700] initcall init_signal_sysctls+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.260800] calling  init_umh_sysctls+0x0&#x2F;0x48 @ 1<br>[    1.269594] initcall init_umh_sysctls+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.281238] calling  migration_init+0x0&#x2F;0x78 @ 1<br>[    1.289743] initcall migration_init+0x0&#x2F;0x78 returned 0 after 0 usecs<br>[    1.301098] calling  srcu_bootup_announce+0x0&#x2F;0xa0 @ 1<br>[    1.310167] rcu: Hierarchical SRCU implementation.<br>[    1.318543] rcu: 	Max phase no-delay instances is 1000.<br>[    1.327651] initcall srcu_bootup_announce+0x0&#x2F;0xa0 returned 0 after 8000 usecs<br>[    1.340231] calling  rcu_spawn_gp_kthread+0x0&#x2F;0x178 @ 1<br>[    1.351201] initcall rcu_spawn_gp_kthread+0x0&#x2F;0x178 returned 0 after 0 usecs<br>[    1.363539] calling  check_cpu_stall_init+0x0&#x2F;0x40 @ 1<br>[    1.372684] initcall check_cpu_stall_init+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    1.384821] calling  rcu_sysrq_init+0x0&#x2F;0x48 @ 1<br>[    1.392956] initcall rcu_sysrq_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.404194] calling  cpu_stop_init+0x0&#x2F;0xf0 @ 1<br>[    1.414680] initcall cpu_stop_init+0x0&#x2F;0xf0 returned 0 after 0 usecs<br>[    1.426091] calling  init_kprobes+0x0&#x2F;0x180 @ 1<br>[    1.447431] initcall init_kprobes+0x0&#x2F;0x180 returned 0 after 12000 usecs<br>[    1.459253] calling  init_trace_printk+0x0&#x2F;0x20 @ 1<br>[    1.468049] initcall init_trace_printk+0x0&#x2F;0x20 returned 0 after 0 usecs<br>[    1.479893] calling  event_trace_enable_again+0x0&#x2F;0x58 @ 1<br>[    1.489507] initcall event_trace_enable_again+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    1.502185] calling  irq_work_init_threads+0x0&#x2F;0x10 @ 1<br>[    1.511328] initcall irq_work_init_threads+0x0&#x2F;0x10 returned 0 after 0 usecs<br>[    1.523583] calling  jump_label_init_module+0x0&#x2F;0x30 @ 1<br>[    1.532951] initcall jump_label_init_module+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    1.545376] calling  init_zero_pfn+0x0&#x2F;0x38 @ 1<br>[    1.553513] initcall init_zero_pfn+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    1.564660] calling  init_fs_inode_sysctls+0x0&#x2F;0x48 @ 1<br>[    1.574058] initcall init_fs_inode_sysctls+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.586304] calling  init_fs_locks_sysctls+0x0&#x2F;0x48 @ 1<br>[    1.595704] initcall init_fs_locks_sysctls+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.607974] calling  init_fs_sysctls+0x0&#x2F;0x48 @ 1<br>[    1.616468] initcall init_fs_sysctls+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.627902] calling  init_security_keys_sysctls+0x0&#x2F;0x48 @ 1<br>[    1.638277] initcall init_security_keys_sysctls+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.651389] calling  dynamic_debug_init+0x0&#x2F;0x2d0 @ 1<br>[    1.672466] initcall dynamic_debug_init+0x0&#x2F;0x2d0 returned 0 after 8000 usecs<br>[    1.685173] calling  its_pmsi_init+0x0&#x2F;0xb8 @ 1<br>[    1.693851] Platform MSI: ITS@0x1a040000 domain created<br>[    1.703164] Platform MSI: ITS@0x1a080000 domain created<br>[    1.712376] Platform MSI: ITS@0x1a0c0000 domain created<br>[    1.722070] Platform MSI: ITS@0x1a100000 domain created<br>[    1.731276] initcall its_pmsi_init+0x0&#x2F;0xb8 returned 0 after 16000 usecs<br>[    1.743145] calling  its_pci_msi_init+0x0&#x2F;0x40 @ 1<br>[    1.752004] PCI&#x2F;MSI: ITS@0x1a040000 domain created<br>[    1.760463] PCI&#x2F;MSI: ITS@0x1a080000 domain created<br>[    1.768941] PCI&#x2F;MSI: ITS@0x1a0c0000 domain created<br>[    1.777402] PCI&#x2F;MSI: ITS@0x1a100000 domain created<br>[    1.785781] initcall its_pci_msi_init+0x0&#x2F;0x40 returned 0 after 16000 usecs<br>[    1.798035] calling  efi_memreserve_root_init+0x0&#x2F;0x58 @ 1<br>[    1.807989] initcall efi_memreserve_root_init+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    1.820699] calling  arm_enable_runtime_services+0x0&#x2F;0x240 @ 1<br>[    1.831613] Remapping and enabling EFI services.<br>[    1.861319] initcall arm_enable_runtime_services+0x0&#x2F;0x240 returned 0 after 24000 usecs<br>[    1.875254] calling  efi_earlycon_remap_fb+0x0&#x2F;0x88 @ 1<br>[    1.884444] initcall efi_earlycon_remap_fb+0x0&#x2F;0x88 returned 0 after 0 usecs<br>[    1.896713] calling  dummy_timer_register+0x0&#x2F;0x48 @ 1<br>[    1.906192] initcall dummy_timer_register+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    1.931486] smp: Bringing up secondary CPUs …<br>INFO:    mpidr 0x1810c0000 set actlr_el3 from 0x0 to 0x800<br>INFO:    mpidr 0x1810c0000 set actlr_el2 from 0x0 to 0x800<br>INFO:    mpidr 0x1811e0000 set actlr_el3 from 0x0 to 0x800<br>INFO:    mpidr 0x1811e0000 set actlr_el2 from 0x0 to 0x800<br>INFO:    mpidr 0x1812e0000 set actlr_el3 from 0x0 to 0x800<br>INFO:    mpidr 0x1812e0000 set actlr_el2 from 0x0 to 0x800<br>INFO:    mpam_enable set cpu_ect_lr2_el1 0x1800<br>INFO:    mpidr 0x281000000 set actlr_el3 from 0x0 to 0x800<br>INFO:    mpidr 0x281000000 set actlr_el2 from 0x0 to 0x800<br>INFO:    mpidr 0x2810c0000 set actlr_el3 from 0x0 to 0x800<br>INFO:    mpidr 0x2810c0000 set actlr_el2 from 0x0 to 0x800<br>INFO:    mpidr 0x2811e0000 set actlr_el3 from 0x0 to 0x800<br>INFO:    mpidr 0x2811e0000 set actlr_el2 from 0x0 to 0x800<br>INFO:    mpidr 0x2812e0000 set actlr_el3 from 0x0 to 0x800<br>INFO:    mpidr 0x2812e0000 set actlr_el2 from 0x0 to 0x800<br>[    1.972285] Detected PIPT I-cache on CPU1<br>[    1.974984] GICv3: CPU1: found redistributor 1000c0000 region 0:0x00000002c0380000<br>[    1.975815] GICv3: CPU1: using allocated LPI pending table @0x0000000900330000<br>[    1.979919] CPU1: Booted secondary processor 0x01000c0000 [0x410fd8e0]<br>[    2.018812] Detected PIPT I-cache on CPU2<br>[    2.021204] GICv3: CPU2: found redistributor 1001e0000 region 0:0x00000002c0800000<br>[    2.021976] GICv3: CPU2: using allocated LPI pending table @0x0000000900340000<br>[    2.025768] CPU2: Booted secondary processor 0x01001e0000 [0x410fd8e0]<br>[    2.064555] Detected PIPT I-cache on CPU3<br>[    2.067532] GICv3: CPU3: found redistributor 1002e0000 region 0:0x00000002c0c00000<br>[    2.068357] GICv3: CPU3: using allocated LPI pending table @0x0000000900350000<br>[    2.072256] CPU3: Booted secondary processor 0x01002e0000 [0x410fd8e0]<br>[    2.121909] Detected PIPT I-cache on CPU4<br>[    2.128817] GICv3: CPU4: found redistributor 200000000 region 1:0x00000002c2080000<br>[    2.133738] GICv3: CPU4: using allocated LPI pending table @0x0000000900360000<br>[    2.139210] CPU4: Booted secondary processor 0x0200000000 [0x410fd8e0]<br>[    2.192447] Detected PIPT I-cache on CPU5<br>[    2.196650] GICv3: CPU5: found redistributor 2000c0000 region 1:0x00000002c2380000<br>[    2.197565] GICv3: CPU5: using allocated LPI pending table @0x0000000900370000<br>[    2.201414] CPU5: Booted secondary processor 0x02000c0000 [0x410fd8e0]<br>[    2.247123] Detected PIPT I-cache on CPU6<br>[    2.251352] GICv3: CPU6: found redistributor 2001e0000 region 1:0x00000002c2800000<br>[    2.252234] GICv3: CPU6: using allocated LPI pending table @0x0000000900380000<br>[    2.255939] CPU6: Booted secondary processor 0x02001e0000 [0x410fd8e0]<br>[    2.301874] Detected PIPT I-cache on CPU7<br>[    2.306639] GICv3: CPU7: found redistributor 2002e0000 region 1:0x00000002c2c00000<br>[    2.307575] GICv3: CPU7: using allocated LPI pending table @0x0000000900390000<br>[    2.311582] CPU7: Booted secondary processor 0x02002e0000 [0x410fd8e0]<br>[    2.322299] smp: Brought up 1 node, 8 CPUs<br>[    2.638346] SMP: Total of 8 processors activated.<br>[    2.646844] CPU features: detected: ARMv8.4 Translation Table Level<br>[    2.657945] CPU features: detected: Instruction cache invalidation not required for I&#x2F;D coherence<br>[    2.673444] CPU features: detected: Data cache clean to the PoU not required for I&#x2F;D coherence<br>[    2.688506] CPU features: detected: Common not Private translations<br>[    2.699592] CPU features: detected: CRC32 instructions<br>[    2.708684] CPU features: detected: Data cache clean to Point of Deep Persistence<br>[    2.721795] CPU features: detected: Data cache clean to Point of Persistence<br>[    2.734151] CPU features: detected: Data independent timing control (DIT)<br>[    2.746094] CPU features: detected: E0PD<br>[    2.753135] CPU features: detected: Enhanced Counter Virtualization<br>[    2.764024] CPU features: detected: Enhanced Counter Virtualization (CNTPOFF)<br>[    2.776497] CPU features: detected: Enhanced Privileged Access Never<br>[    2.787658] CPU features: detected: Enhanced Virtualization Traps<br>[    2.798373] CPU features: detected: Fine Grained Traps<br>[    2.807338] CPU features: detected: RCpc load-acquire (LDAPR)<br>[    2.817476] CPU features: detected: LSE atomic instructions<br>[    2.827342] CPU features: detected: Privileged Access Never<br>[    2.837008] CPU features: detected: RAS Extension Support<br>[    2.846520] CPU features: detected: Random Number Generator<br>[    2.856208] CPU features: detected: Speculation barrier (SB)<br>[    2.866170] CPU features: detected: Stage-2 Force Write-Back<br>[    2.876133] CPU features: detected: TLB range maintenance instructions<br>[    2.887585] CPU features: detected: WFx with timeout<br>[    2.896509] CPU features: detected: Speculative Store Bypassing Safe (SSBS)<br>[    2.908696] CPU features: detected: Scalable Vector Extension<br>[    2.928972] SVE: maximum available vector length 16 bytes per vector<br>[    2.940408] SVE: default vector length 16 bytes per vector<br>[    2.950646] CPU: All CPU(s) started at EL2<br>[    2.958109] alternatives: applying system-wide alternatives<br>[    3.253470] devtmpfs: initialized<br>[    3.920322] calling  bpf_jit_charge_init+0x0&#x2F;0x58 @ 1<br>[    3.930453] initcall bpf_jit_charge_init+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    3.942838] calling  ipc_ns_init+0x0&#x2F;0x50 @ 1<br>[    3.951577] initcall ipc_ns_init+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    3.962767] calling  init_mmap_min_addr+0x0&#x2F;0x38 @ 1<br>[    3.971880] initcall init_mmap_min_addr+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    3.984073] calling  pci_realloc_setup_params+0x0&#x2F;0x60 @ 1<br>[    3.994196] initcall pci_realloc_setup_params+0x0&#x2F;0x60 returned 0 after 0 usecs<br>[    4.007254] calling  inet_frag_wq_init+0x0&#x2F;0x60 @ 1<br>[    4.021471] initcall inet_frag_wq_init+0x0&#x2F;0x60 returned 0 after 4000 usecs<br>[    4.036512] calling  fpsimd_init+0x0&#x2F;0xc0 @ 1<br>[    4.045779] initcall fpsimd_init+0x0&#x2F;0xc0 returned 0 after 0 usecs<br>[    4.056942] calling  tagged_addr_init+0x0&#x2F;0x48 @ 1<br>[    4.065830] initcall tagged_addr_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    4.077705] calling  init_amu_fie+0x0&#x2F;0x70 @ 1<br>[    4.085849] initcall init_amu_fie+0x0&#x2F;0x70 returned 0 after 0 usecs<br>[    4.097168] calling  arm64_efi_rt_init+0x0&#x2F;0xc8 @ 1<br>[    4.106837] initcall arm64_efi_rt_init+0x0&#x2F;0xc8 returned 0 after 0 usecs<br>[    4.118738] calling  map_entry_trampoline+0x0&#x2F;0x158 @ 1<br>[    4.128745] initcall map_entry_trampoline+0x0&#x2F;0x158 returned 0 after 0 usecs<br>[    4.141328] calling  alloc_frozen_cpus+0x0&#x2F;0x18 @ 1<br>[    4.150331] initcall alloc_frozen_cpus+0x0&#x2F;0x18 returned 0 after 0 usecs<br>[    4.162368] calling  cpu_hotplug_pm_sync_init+0x0&#x2F;0x38 @ 1<br>[    4.172369] initcall cpu_hotplug_pm_sync_init+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    4.185442] calling  wq_sysfs_init+0x0&#x2F;0x90 @ 1<br>[    4.195618] initcall wq_sysfs_init+0x0&#x2F;0x90 returned 0 after 0 usecs<br>[    4.207122] calling  ksysfs_init+0x0&#x2F;0xd8 @ 1<br>[    4.215845] initcall ksysfs_init+0x0&#x2F;0xd8 returned 0 after 0 usecs<br>[    4.227007] calling  pm_init+0x0&#x2F;0x98 @ 1<br>[    4.236540] initcall pm_init+0x0&#x2F;0x98 returned 0 after 0 usecs<br>[    4.246997] calling  pm_disk_init+0x0&#x2F;0x38 @ 1<br>[    4.255086] initcall pm_disk_init+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    4.266243] calling  swsusp_header_init+0x0&#x2F;0x48 @ 1<br>[    4.275082] initcall swsusp_header_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    4.287122] calling  rcu_set_runtime_mode+0x0&#x2F;0x38 @ 1<br>[    4.296320] initcall rcu_set_runtime_mode+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    4.308714] calling  init_jiffies_clocksource+0x0&#x2F;0x38 @ 1<br>[    4.318723] clocksource: jiffies: mask: 0xffffffff max_cycles: 0xffffffff, max_idle_ns: 7645041785100000 ns<br>[    4.335913] initcall init_jiffies_clocksource+0x0&#x2F;0x38 returned 0 after 4000 usecs<br>[    4.349356] calling  futex_init+0x0&#x2F;0x108 @ 1<br>[    4.357662] futex hash table entries: 2048 (order: 5, 131072 bytes, linear)<br>[    4.371480] initcall futex_init+0x0&#x2F;0x108 returned 0 after 4000 usecs<br>[    4.383072] calling  cgroup_wq_init+0x0&#x2F;0x48 @ 1<br>[    4.392094] initcall cgroup_wq_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    4.403648] calling  cgroup1_wq_init+0x0&#x2F;0x48 @ 1<br>[    4.412476] initcall cgroup1_wq_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    4.424199] calling  ftrace_mod_cmd_init+0x0&#x2F;0x20 @ 1<br>[    4.433561] initcall ftrace_mod_cmd_init+0x0&#x2F;0x20 returned 0 after 0 usecs<br>[    4.445928] calling  init_wakeup_tracer+0x0&#x2F;0x50 @ 1<br>[    4.455297] initcall init_wakeup_tracer+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    4.467537] calling  init_graph_trace+0x0&#x2F;0x88 @ 1<br>[    4.477490] initcall init_graph_trace+0x0&#x2F;0x88 returned 0 after 0 usecs<br>[    4.489426] calling  trace_events_eprobe_init_early+0x0&#x2F;0x50 @ 1<br>[    4.500337] initcall trace_events_eprobe_init_early+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    4.514262] calling  trace_events_synth_init_early+0x0&#x2F;0x50 @ 1<br>[    4.524891] initcall trace_events_synth_init_early+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    4.538620] calling  init_kprobe_trace_early+0x0&#x2F;0x40 @ 1<br>[    4.548505] initcall init_kprobe_trace_early+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    4.561290] calling  cpu_pm_init+0x0&#x2F;0x30 @ 1<br>[    4.569864] initcall cpu_pm_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    4.580849] calling  bpf_offload_init+0x0&#x2F;0x38 @ 1<br>[    4.589892] initcall bpf_offload_init+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    4.601691] calling  memory_failure_init+0x0&#x2F;0xe0 @ 1<br>[    4.611631] initcall memory_failure_init+0x0&#x2F;0xe0 returned 0 after 0 usecs<br>[    4.623980] calling  cma_init_reserved_areas+0x0&#x2F;0x70 @ 1<br>[    4.656481] initcall cma_init_reserved_areas+0x0&#x2F;0x70 returned 0 after 20000 usecs<br>[    4.670213] calling  fsnotify_init+0x0&#x2F;0x68 @ 1<br>[    4.724906] initcall fsnotify_init+0x0&#x2F;0x68 returned 0 after 40000 usecs<br>[    4.739015] calling  filelock_init+0x0&#x2F;0xe8 @ 1<br>[    4.785902] initcall filelock_init+0x0&#x2F;0xe8 returned 0 after 36000 usecs<br>[    4.800042] calling  init_script_binfmt+0x0&#x2F;0x38 @ 1<br>[    4.809899] initcall init_script_binfmt+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    4.823013] calling  init_elf_binfmt+0x0&#x2F;0x38 @ 1<br>[    4.832237] initcall init_elf_binfmt+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    4.844817] calling  init_compat_elf_binfmt+0x0&#x2F;0x38 @ 1<br>[    4.855119] initcall init_compat_elf_binfmt+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    4.868817] calling  configfs_init+0x0&#x2F;0xc8 @ 1<br>[    4.892713] initcall configfs_init+0x0&#x2F;0xc8 returned 0 after 12000 usecs<br>[    4.905674] calling  debugfs_init+0x0&#x2F;0xc0 @ 1<br>[    4.914704] initcall debugfs_init+0x0&#x2F;0xc0 returned 0 after 0 usecs<br>[    4.926866] calling  tracefs_init+0x0&#x2F;0x90 @ 1<br>[    4.942960] initcall tracefs_init+0x0&#x2F;0x90 returned 0 after 8000 usecs<br>[    4.955640] calling  securityfs_init+0x0&#x2F;0xc8 @ 1<br>[    4.974274] initcall securityfs_init+0x0&#x2F;0xc8 returned 0 after 8000 usecs<br>[    4.987537] calling  pinctrl_init+0x0&#x2F;0x38 @ 1<br>[    4.996524] pinctrl core: initialized pinctrl subsystem<br>[    5.010096] initcall pinctrl_init+0x0&#x2F;0x38 returned 0 after 16000 usecs<br>[    5.022981] calling  gpiolib_dev_init+0x0&#x2F;0x198 @ 1<br>[    5.035095] initcall gpiolib_dev_init+0x0&#x2F;0x198 returned 0 after 0 usecs<br>[    5.048133] calling  hi3516cv300_crg_init+0x0&#x2F;0x30 @ 1<br>[    5.059198] initcall hi3516cv300_crg_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.072687] calling  hi3519_clk_init+0x0&#x2F;0x30 @ 1<br>[    5.082306] initcall hi3519_clk_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.094963] calling  hi3559av100_crg_init+0x0&#x2F;0x30 @ 1<br>[    5.105377] initcall hi3559av100_crg_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.118854] calling  hi3660_clk_init+0x0&#x2F;0x30 @ 1<br>[    5.128487] initcall hi3660_clk_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.141163] calling  hi3670_clk_init+0x0&#x2F;0x30 @ 1<br>[    5.151376] initcall hi3670_clk_init+0x0&#x2F;0x30 returned 0 after 4000 usecs<br>[    5.164577] calling  hi3798cv200_crg_init+0x0&#x2F;0x30 @ 1<br>[    5.174974] initcall hi3798cv200_crg_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.188470] calling  regulator_init+0x0&#x2F;0x128 @ 1<br>[    5.202990] initcall regulator_init+0x0&#x2F;0x128 returned 0 after 8000 usecs<br>[    5.216237] calling  iommu_init+0x0&#x2F;0x50 @ 1<br>[    5.216995] probe of reg-dummy returned 0 after 12000 usecs<br>[    5.224836] initcall iommu_init+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    5.246127] calling  component_debug_init+0x0&#x2F;0x40 @ 1<br>[    5.256504] initcall component_debug_init+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    5.269907] calling  genpd_bus_init+0x0&#x2F;0x30 @ 1<br>[    5.279430] initcall genpd_bus_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.291853] calling  soc_bus_register+0x0&#x2F;0x60 @ 1<br>[    5.302125] initcall soc_bus_register+0x0&#x2F;0x60 returned 0 after 4000 usecs<br>[    5.315418] calling  register_cpufreq_notifier+0x0&#x2F;0x60 @ 1<br>[    5.326269] initcall register_cpufreq_notifier+0x0&#x2F;0x60 returned -22 after 0 usecs<br>[    5.340814] calling  cpufreq_core_init+0x0&#x2F;0x108 @ 1<br>[    5.351091] initcall cpufreq_core_init+0x0&#x2F;0x108 returned 0 after 0 usecs<br>[    5.364267] calling  cpufreq_gov_performance_init+0x0&#x2F;0x30 @ 1<br>[    5.375771] initcall cpufreq_gov_performance_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.390525] calling  cpufreq_gov_powersave_init+0x0&#x2F;0x30 @ 1<br>[    5.401682] initcall cpufreq_gov_powersave_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.416132] calling  cpufreq_gov_userspace_init+0x0&#x2F;0x30 @ 1<br>[    5.427350] initcall cpufreq_gov_userspace_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.441812] calling  CPU_FREQ_GOV_ONDEMAND_init+0x0&#x2F;0x30 @ 1<br>[    5.452879] initcall CPU_FREQ_GOV_ONDEMAND_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.467344] calling  CPU_FREQ_GOV_CONSERVATIVE_init+0x0&#x2F;0x30 @ 1<br>[    5.479136] initcall CPU_FREQ_GOV_CONSERVATIVE_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.494229] calling  cpuidle_init+0x0&#x2F;0x38 @ 1<br>[    5.503608] initcall cpuidle_init+0x0&#x2F;0x38 returned 0 after 4000 usecs<br>[    5.516330] calling  arm_dmi_init+0x0&#x2F;0x28 @ 1<br>[    5.529859] SMBIOS 3.3.0 present.<br>[    5.536613] DMI: Default Default&#x2F;Default, BIOS 1.2.M2.AL.E.002.02 03&#x2F;04&#x2F;2024<br>[    5.554712] initcall arm_dmi_init+0x0&#x2F;0x28 returned 0 after 24000 usecs<br>[    5.567486] calling  hi3660_mbox_init+0x0&#x2F;0x30 @ 1<br>[    5.577719] initcall hi3660_mbox_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.590580] calling  hi6220_mbox_init+0x0&#x2F;0x30 @ 1<br>[    5.600478] initcall hi6220_mbox_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    5.613351] calling  sock_init+0x0&#x2F;0xc8 @ 1<br>[    5.680745] initcall sock_init+0x0&#x2F;0xc8 returned 0 after 56000 usecs<br>[    5.693286] calling  net_inuse_init+0x0&#x2F;0x40 @ 1<br>[    5.702796] initcall net_inuse_init+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    5.715326] calling  net_defaults_init+0x0&#x2F;0x68 @ 1<br>[    5.725083] initcall net_defaults_init+0x0&#x2F;0x68 returned 0 after 0 usecs<br>[    5.738078] calling  init_default_flow_dissectors+0x0&#x2F;0x70 @ 1<br>[    5.749586] initcall init_default_flow_dissectors+0x0&#x2F;0x70 returned 0 after 0 usecs<br>[    5.764353] calling  netpoll_init+0x0&#x2F;0x28 @ 1<br>[    5.773407] initcall netpoll_init+0x0&#x2F;0x28 returned 0 after 0 usecs<br>[    5.785622] calling  netlink_proto_init+0x0&#x2F;0x1b8 @ 1<br>[    5.813997] NET: Registered PF_NETLINK&#x2F;PF_ROUTE protocol family<br>[    5.832325] initcall netlink_proto_init+0x0&#x2F;0x1b8 returned 0 after 36000 usecs<br>[    5.846746] calling  genl_init+0x0&#x2F;0x78 @ 1<br>[    5.856949] initcall genl_init+0x0&#x2F;0x78 returned 0 after 4000 usecs<br>[    5.873672] calling  debug_monitors_init+0x0&#x2F;0x48 @ 1<br>[    5.892562] initcall debug_monitors_init+0x0&#x2F;0x48 returned 0 after 8000 usecs<br>[    5.906178] calling  irq_sysfs_init+0x0&#x2F;0x118 @ 1<br>[    5.924743] initcall irq_sysfs_init+0x0&#x2F;0x118 returned 0 after 8000 usecs<br>[    5.937611] calling  dma_atomic_pool_init+0x0&#x2F;0x160 @ 1<br>[    5.978488] DMA: preallocated 4096 KiB GFP_KERNEL pool for atomic allocations<br>[    6.017596] DMA: preallocated 4096 KiB GFP_KERNEL|GFP_DMA pool for atomic allocations<br>[    6.057729] DMA: preallocated 4096 KiB GFP_KERNEL|GFP_DMA32 pool for atomic allocations<br>[    6.077603] initcall dma_atomic_pool_init+0x0&#x2F;0x160 returned 0 after 120000 usecs<br>[    6.091719] calling  audit_init+0x0&#x2F;0x158 @ 1<br>[    6.157164] audit: initializing netlink subsys (disabled)<br>[    6.173837] initcall audit_init+0x0&#x2F;0x158 returned 0 after 72000 usecs<br>[    6.174864] audit: type&#x3D;2000 audit(4.216:1): state&#x3D;initialized audit_enabled&#x3D;0 res&#x3D;1<br>[    6.186342] calling  release_early_probes+0x0&#x2F;0x68 @ 1<br>[    6.210852] initcall release_early_probes+0x0&#x2F;0x68 returned 0 after 0 usecs<br>[    6.224107] calling  bdi_class_init+0x0&#x2F;0x58 @ 1<br>[    6.235549] initcall bdi_class_init+0x0&#x2F;0x58 returned 0 after 4000 usecs<br>[    6.248240] calling  mm_sysfs_init+0x0&#x2F;0x48 @ 1<br>[    6.257309] initcall mm_sysfs_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    6.269323] calling  init_per_zone_wmark_min+0x0&#x2F;0x38 @ 1<br>[    6.280771] initcall init_per_zone_wmark_min+0x0&#x2F;0x38 returned 0 after 4000 usecs<br>[    6.294903] calling  ramoops_init+0x0&#x2F;0x70 @ 1<br>[    6.305498] initcall ramoops_init+0x0&#x2F;0x70 returned 0 after 0 usecs<br>[    6.317415] calling  mpi_init+0x0&#x2F;0x90 @ 1<br>[    6.325731] initcall mpi_init+0x0&#x2F;0x90 returned 0 after 0 usecs<br>[    6.336930] calling  acpi_gpio_setup_params+0x0&#x2F;0xf0 @ 1<br>[    6.347620] initcall acpi_gpio_setup_params+0x0&#x2F;0xf0 returned 0 after 0 usecs<br>[    6.361138] calling  pcibus_class_init+0x0&#x2F;0x30 @ 1<br>[    6.370900] initcall pcibus_class_init+0x0&#x2F;0x30 returned 0 after 4000 usecs<br>[    6.384145] calling  pci_driver_init+0x0&#x2F;0x48 @ 1<br>[    6.395386] initcall pci_driver_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    6.407831] calling  backlight_class_init+0x0&#x2F;0xd0 @ 1<br>[    6.418080] initcall backlight_class_init+0x0&#x2F;0xd0 returned 0 after 4000 usecs<br>[    6.431806] calling  amba_init+0x0&#x2F;0x30 @ 1<br>[    6.441211] initcall amba_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    6.452661] calling  tty_class_init+0x0&#x2F;0x30 @ 1<br>[    6.461950] initcall tty_class_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    6.474229] calling  vtconsole_class_init+0x0&#x2F;0x110 @ 1<br>[    6.487969] initcall vtconsole_class_init+0x0&#x2F;0x110 returned 0 after 4000 usecs<br>[    6.502009] calling  iommu_dev_init+0x0&#x2F;0x30 @ 1<br>[    6.511098] initcall iommu_dev_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    6.523221] calling  devlink_class_init+0x0&#x2F;0x70 @ 1<br>[    6.532949] initcall devlink_class_init+0x0&#x2F;0x70 returned 0 after 0 usecs<br>[    6.545697] calling  software_node_init+0x0&#x2F;0x50 @ 1<br>[    6.555411] initcall software_node_init+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    6.568249] calling  wakeup_sources_debugfs_init+0x0&#x2F;0x48 @ 1<br>[    6.579543] initcall wakeup_sources_debugfs_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    6.593729] calling  wakeup_sources_sysfs_init+0x0&#x2F;0x40 @ 1<br>[    6.604599] initcall wakeup_sources_sysfs_init+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    6.618463] calling  regmap_initcall+0x0&#x2F;0x28 @ 1<br>[    6.627871] initcall regmap_initcall+0x0&#x2F;0x28 returned 0 after 0 usecs<br>[    6.640168] calling  syscon_init+0x0&#x2F;0x30 @ 1<br>[    6.649268] initcall syscon_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    6.660949] calling  spi_init+0x0&#x2F;0xd0 @ 1<br>[    6.670310] initcall spi_init+0x0&#x2F;0xd0 returned 0 after 0 usecs<br>[    6.681641] calling  i2c_init+0x0&#x2F;0x140 @ 1<br>[    6.691052] initcall i2c_init+0x0&#x2F;0x140 returned 0 after 0 usecs<br>[    6.702527] calling  thermal_init+0x0&#x2F;0x1b0 @ 1<br>[    6.711624] thermal_sys: Registered thermal governor ‘fair_share’<br>[    6.711813] thermal_sys: Registered thermal governor ‘step_wise’<br>[    6.723234] thermal_sys: Registered thermal governor ‘user_space’<br>[    6.734848] initcall thermal_init+0x0&#x2F;0x1b0 returned 0 after 20000 usecs<br>[    6.758865] calling  init_menu+0x0&#x2F;0x30 @ 1<br>[    6.767806] cpuidle: using governor menu<br>[    6.775303] initcall init_menu+0x0&#x2F;0x30 returned 0 after 8000 usecs<br>[    6.787250] calling  pcc_init+0x0&#x2F;0xd0 @ 1<br>[    6.795554] initcall pcc_init+0x0&#x2F;0xd0 returned -19 after 0 usecs<br>[    6.807125] calling  kobject_uevent_init+0x0&#x2F;0x20 @ 1<br>[    6.817173] initcall kobject_uevent_init+0x0&#x2F;0x20 returned 0 after 0 usecs<br>[    6.832819] calling  reserve_memblock_reserved_regions+0x0&#x2F;0x180 @ 1<br>[    6.845995] initcall reserve_memblock_reserved_regions+0x0&#x2F;0x180 returned 0 after 0 usecs<br>[    6.861430] calling  aarch32_alloc_vdso_pages+0x0&#x2F;0x30 @ 1<br>[    6.873682] initcall aarch32_alloc_vdso_pages+0x0&#x2F;0x30 returned 0 after 4000 usecs<br>[    6.889235] calling  vdso_init+0x0&#x2F;0x40 @ 1<br>[    6.897685] initcall vdso_init+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    6.909398] calling  arch_hw_breakpoint_init+0x0&#x2F;0x118 @ 1<br>[    6.920300] hw-breakpoint: found 6 breakpoint and 4 watchpoint registers.<br>[    6.942421] initcall arch_hw_breakpoint_init+0x0&#x2F;0x118 returned 0 after 20000 usecs<br>[    6.957333] calling  adjust_protection_map+0x0&#x2F;0x58 @ 1<br>[    6.967670] initcall adjust_protection_map+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    6.981275] calling  asids_update_limit+0x0&#x2F;0xc0 @ 1<br>[    6.991478] ASID allocator initialised with 65536 entries<br>[    7.001985] initcall asids_update_limit+0x0&#x2F;0xc0 returned 0 after 12000 usecs<br>[    7.015711] calling  hugetlbpage_init+0x0&#x2F;0x48 @ 1<br>[    7.025417] initcall hugetlbpage_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    7.038184] calling  kcmp_cookies_init+0x0&#x2F;0x60 @ 1<br>[    7.048238] initcall kcmp_cookies_init+0x0&#x2F;0x60 returned 0 after 4000 usecs<br>[    7.061651] calling  cryptomgr_init+0x0&#x2F;0x30 @ 1<br>[    7.070745] initcall cryptomgr_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    7.083109] calling  qdf2xxx_pinctrl_init+0x0&#x2F;0x30 @ 1<br>[    7.094572] initcall qdf2xxx_pinctrl_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    7.108085] calling  acpi_pci_init+0x0&#x2F;0x80 @ 1<br>[    7.117311] acpiphp: ACPI Hot Plug PCI Controller Driver version: 0.5<br>[    7.129640] initcall acpi_pci_init+0x0&#x2F;0x80 returned 0 after 12000 usecs<br>[    7.142657] calling  dma_channel_table_init+0x0&#x2F;0x188 @ 1<br>[    7.154238] initcall dma_channel_table_init+0x0&#x2F;0x188 returned 0 after 0 usecs<br>[    7.168191] calling  dma_bus_init+0x0&#x2F;0xa0 @ 1<br>[    7.219428] initcall dma_bus_init+0x0&#x2F;0xa0 returned 0 after 40000 usecs<br>[    7.232368] calling  serial_base_init+0x0&#x2F;0x98 @ 1<br>[    7.244565] initcall serial_base_init+0x0&#x2F;0x98 returned 0 after 4000 usecs<br>[    7.257965] calling  pl011_init+0x0&#x2F;0x78 @ 1<br>[    7.266315] Serial: AMBA PL011 UART driver<br>[    7.275371] initcall pl011_init+0x0&#x2F;0x78 returned 0 after 8000 usecs<br>[    7.287569] calling  iommu_dma_init+0x0&#x2F;0x40 @ 1<br>[    7.316175] initcall iommu_dma_init+0x0&#x2F;0x40 returned 0 after 16000 usecs<br>[    7.329407] calling  dmi_id_init+0x0&#x2F;0xd8 @ 1<br>[    7.341471] initcall dmi_id_init+0x0&#x2F;0xd8 returned 0 after 4000 usecs<br>[    7.353862] calling  of_platform_default_populate_init+0x0&#x2F;0x118 @ 1<br>[    7.366264] initcall of_platform_default_populate_init+0x0&#x2F;0x118 returned -19 after 0 usecs<br>[    7.385976] calling  topology_init+0x0&#x2F;0xc8 @ 1<br>[    7.408778] initcall topology_init+0x0&#x2F;0xc8 returned 0 after 12000 usecs<br>[    7.422087] calling  module_init_limits+0x0&#x2F;0x110 @ 1<br>[    7.432182] Modules: 22704 pages in range for non-PLT usage<br>[    7.432371] Modules: 514224 pages in range for PLT usage<br>[    7.443172] initcall module_init_limits+0x0&#x2F;0x110 returned 0 after 12000 usecs<br>[    7.467409] calling  uid_cache_init+0x0&#x2F;0x170 @ 1<br>[    7.485635] initcall uid_cache_init+0x0&#x2F;0x170 returned 0 after 8000 usecs<br>[    7.499112] calling  param_sysfs_init+0x0&#x2F;0x70 @ 1<br>[    7.509024] initcall param_sysfs_init+0x0&#x2F;0x70 returned 0 after 0 usecs<br>[    7.521619] calling  user_namespace_sysctl_init+0x0&#x2F;0x178 @ 1<br>[    7.535348] initcall user_namespace_sysctl_init+0x0&#x2F;0x178 returned 0 after 0 usecs<br>[    7.549770] calling  proc_schedstat_init+0x0&#x2F;0x50 @ 1<br>[    7.559908] initcall proc_schedstat_init+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    7.572990] calling  pm_sysrq_init+0x0&#x2F;0x38 @ 1<br>[    7.582633] initcall pm_sysrq_init+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    7.594733] calling  create_proc_profile+0x0&#x2F;0x110 @ 1<br>[    7.604804] initcall create_proc_profile+0x0&#x2F;0x110 returned 0 after 0 usecs<br>[    7.617937] calling  crash_save_vmcoreinfo_init+0x0&#x2F;0x680 @ 1<br>[    7.631746] initcall crash_save_vmcoreinfo_init+0x0&#x2F;0x680 returned 0 after 4000 usecs<br>[    7.646505] calling  crash_notes_memory_init+0x0&#x2F;0x58 @ 1<br>[    7.657053] initcall crash_notes_memory_init+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    7.670912] calling  cgroup_sysfs_init+0x0&#x2F;0x38 @ 1<br>[    7.680820] initcall cgroup_sysfs_init+0x0&#x2F;0x38 returned 0 after 0 usecs<br>[    7.693547] calling  user_namespaces_init+0x0&#x2F;0x50 @ 1<br>[    7.712383] initcall user_namespaces_init+0x0&#x2F;0x50 returned 0 after 8000 usecs<br>[    7.726121] calling  hung_task_init+0x0&#x2F;0xa0 @ 1<br>[    7.739840] initcall hung_task_init+0x0&#x2F;0xa0 returned 0 after 4000 usecs<br>[    7.752575] calling  trace_eval_init+0x0&#x2F;0xb0 @ 1<br>[    7.763853] initcall trace_eval_init+0x0&#x2F;0xb0 returned 0 after 4000 usecs<br>[    7.776896] calling  send_signal_irq_work_init+0x0&#x2F;0x88 @ 1<br>[    7.787618] initcall send_signal_irq_work_init+0x0&#x2F;0x88 returned 0 after 0 usecs<br>[    7.801567] calling  bpf_mem_cache_adjust_size+0x0&#x2F;0xa0 @ 1<br>[    7.812222] initcall bpf_mem_cache_adjust_size+0x0&#x2F;0xa0 returned 0 after 0 usecs<br>[    7.826292] calling  dev_map_init+0x0&#x2F;0xa0 @ 1<br>[    7.835877] initcall dev_map_init+0x0&#x2F;0xa0 returned 0 after 4000 usecs<br>[    7.848180] calling  cpu_map_init+0x0&#x2F;0x90 @ 1<br>[    7.856745] initcall cpu_map_init+0x0&#x2F;0x90 returned 0 after 0 usecs<br>[    7.868585] calling  netns_bpf_init+0x0&#x2F;0x30 @ 1<br>[    7.877693] initcall netns_bpf_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    7.889924] calling  oom_init+0x0&#x2F;0x70 @ 1<br>[    7.902948] initcall oom_init+0x0&#x2F;0x70 returned 0 after 4000 usecs<br>[    7.914776] calling  default_bdi_init+0x0&#x2F;0x48 @ 1<br>[    7.931089] initcall default_bdi_init+0x0&#x2F;0x48 returned 0 after 8000 usecs<br>[    7.944206] calling  cgwb_init+0x0&#x2F;0x48 @ 1<br>[    7.953124] initcall cgwb_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    7.964584] calling  percpu_enable_async+0x0&#x2F;0x28 @ 1<br>[    7.974437] initcall percpu_enable_async+0x0&#x2F;0x28 returned 0 after 0 usecs<br>[    7.987465] calling  kcompactd_init+0x0&#x2F;0xf0 @ 1<br>[    8.001198] initcall kcompactd_init+0x0&#x2F;0xf0 returned 0 after 4000 usecs<br>[    8.014011] calling  init_user_reserve+0x0&#x2F;0x40 @ 1<br>[    8.023943] initcall init_user_reserve+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    8.036594] calling  init_admin_reserve+0x0&#x2F;0x40 @ 1<br>[    8.046116] initcall init_admin_reserve+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    8.058885] calling  init_reserve_notifier+0x0&#x2F;0x40 @ 1<br>[    8.068997] initcall init_reserve_notifier+0x0&#x2F;0x40 returned 0 after 0 usecs<br>[    8.082295] calling  swap_init_sysfs+0x0&#x2F;0x98 @ 1<br>[    8.091717] initcall swap_init_sysfs+0x0&#x2F;0x98 returned 0 after 0 usecs<br>[    8.104143] calling  swapfile_init+0x0&#x2F;0xd8 @ 1<br>[    8.112954] initcall swapfile_init+0x0&#x2F;0xd8 returned 0 after 0 usecs<br>[    8.125046] calling  hugetlb_init+0x0&#x2F;0x430 @ 1<br>[    8.134355] HugeTLB: registered 1.00 GiB page size, pre-allocated 0 pages<br>[    8.147201] HugeTLB: 0 KiB vmemmap can be freed for a 1.00 GiB page<br>[    8.158984] HugeTLB: registered 32.0 MiB page size, pre-allocated 0 pages<br>[    8.171665] HugeTLB: 0 KiB vmemmap can be freed for a 32.0 MiB page<br>[    8.183442] HugeTLB: registered 2.00 MiB page size, pre-allocated 0 pages<br>[    8.196155] HugeTLB: 0 KiB vmemmap can be freed for a 2.00 MiB page<br>[    8.207916] HugeTLB: registered 64.0 KiB page size, pre-allocated 0 pages<br>[    8.220621] HugeTLB: 0 KiB vmemmap can be freed for a 64.0 KiB page<br>[    8.238031] initcall hugetlb_init+0x0&#x2F;0x430 returned 0 after 96000 usecs<br>[    8.250829] calling  ksm_init+0x0&#x2F;0x140 @ 1<br>[    8.332443] initcall ksm_init+0x0&#x2F;0x140 returned 0 after 68000 usecs<br>[    8.344715] calling  memory_tier_init+0x0&#x2F;0x188 @ 1<br>[    8.359795] initcall memory_tier_init+0x0&#x2F;0x188 returned 0 after 4000 usecs<br>[    8.373322] calling  numa_init_sysfs+0x0&#x2F;0x98 @ 1<br>[    8.382713] initcall numa_init_sysfs+0x0&#x2F;0x98 returned 0 after 0 usecs<br>[    8.395232] calling  hugepage_init+0x0&#x2F;0x1b8 @ 1<br>[    8.441809] initcall hugepage_init+0x0&#x2F;0x1b8 returned 0 after 36000 usecs<br>[    8.454867] calling  mem_cgroup_init+0x0&#x2F;0x160 @ 1<br>[    8.464413] initcall mem_cgroup_init+0x0&#x2F;0x160 returned 0 after 0 usecs<br>[    8.477113] calling  mem_cgroup_swap_init+0x0&#x2F;0x90 @ 1<br>[    8.487462] initcall mem_cgroup_swap_init+0x0&#x2F;0x90 returned 0 after 0 usecs<br>[    8.500782] calling  page_idle_init+0x0&#x2F;0x68 @ 1<br>[    8.509983] initcall page_idle_init+0x0&#x2F;0x68 returned 0 after 0 usecs<br>[    8.522210] calling  damon_init+0x0&#x2F;0x68 @ 1<br>[    8.554051] initcall damon_init+0x0&#x2F;0x68 returned 0 after 20000 usecs<br>[    8.566220] calling  damon_va_initcall+0x0&#x2F;0xb8 @ 1<br>[    8.575632] initcall damon_va_initcall+0x0&#x2F;0xb8 returned 0 after 0 usecs<br>[    8.588270] calling  damon_pa_initcall+0x0&#x2F;0x88 @ 1<br>[    8.597573] initcall damon_pa_initcall+0x0&#x2F;0x88 returned 0 after 0 usecs<br>[    8.610194] calling  sel_ib_pkey_init+0x0&#x2F;0x58 @ 1<br>[    8.619784] initcall sel_ib_pkey_init+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    8.632520] calling  dh_init+0x0&#x2F;0x70 @ 1<br>[    8.640808] initcall dh_init+0x0&#x2F;0x70 returned 0 after 4000 usecs<br>[    8.652375] calling  rsa_init+0x0&#x2F;0x68 @ 1<br>[    8.660392] initcall rsa_init+0x0&#x2F;0x68 returned 0 after 0 usecs<br>[    8.671594] calling  sm2_init+0x0&#x2F;0x30 @ 1<br>[    8.679549] initcall sm2_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.690741] calling  ecdsa_init+0x0&#x2F;0xa8 @ 1<br>[    8.699240] initcall ecdsa_init+0x0&#x2F;0xa8 returned 0 after 0 usecs<br>[    8.710935] calling  hmac_module_init+0x0&#x2F;0x30 @ 1<br>[    8.720100] initcall hmac_module_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.732606] calling  crypto_null_mod_init+0x0&#x2F;0xa0 @ 1<br>[    8.743330] initcall crypto_null_mod_init+0x0&#x2F;0xa0 returned 0 after 4000 usecs<br>[    8.756920] calling  md5_mod_init+0x0&#x2F;0x30 @ 1<br>[    8.765505] initcall md5_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.777427] calling  sha1_generic_mod_init+0x0&#x2F;0x30 @ 1<br>[    8.787440] initcall sha1_generic_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.800726] calling  sha256_generic_mod_init+0x0&#x2F;0x30 @ 1<br>[    8.811078] initcall sha256_generic_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.824699] calling  sha512_generic_mod_init+0x0&#x2F;0x30 @ 1<br>[    8.835071] initcall sha512_generic_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.848654] calling  sha3_generic_mod_init+0x0&#x2F;0x30 @ 1<br>[    8.858856] initcall sha3_generic_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.872148] calling  sm3_generic_mod_init+0x0&#x2F;0x30 @ 1<br>[    8.882013] initcall sm3_generic_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.895273] calling  crypto_ecb_module_init+0x0&#x2F;0x30 @ 1<br>[    8.906460] initcall crypto_ecb_module_init+0x0&#x2F;0x30 returned 0 after 4000 usecs<br>[    8.920386] calling  crypto_cbc_module_init+0x0&#x2F;0x30 @ 1<br>[    8.930494] initcall crypto_cbc_module_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.943958] calling  crypto_cfb_module_init+0x0&#x2F;0x30 @ 1<br>[    8.954068] initcall crypto_cfb_module_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.967503] calling  crypto_cts_module_init+0x0&#x2F;0x30 @ 1<br>[    8.977632] initcall crypto_cts_module_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    8.991221] calling  xts_module_init+0x0&#x2F;0x30 @ 1<br>[    9.000246] initcall xts_module_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.012567] calling  crypto_ctr_module_init+0x0&#x2F;0x30 @ 1<br>[    9.022681] initcall crypto_ctr_module_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.036118] calling  crypto_gcm_module_init+0x0&#x2F;0x98 @ 1<br>[    9.046274] initcall crypto_gcm_module_init+0x0&#x2F;0x98 returned 0 after 0 usecs<br>[    9.059635] calling  cryptd_init+0x0&#x2F;0x168 @ 1<br>[    9.073980] cryptd: max_cpu_qlen set to 1000<br>[    9.082207] initcall cryptd_init+0x0&#x2F;0x168 returned 0 after 16000 usecs<br>[    9.094761] calling  aes_init+0x0&#x2F;0x30 @ 1<br>[    9.102841] initcall aes_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.114073] calling  sm4_init+0x0&#x2F;0x30 @ 1<br>[    9.122086] initcall sm4_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.133399] calling  deflate_mod_init+0x0&#x2F;0x68 @ 1<br>[    9.142828] initcall deflate_mod_init+0x0&#x2F;0x68 returned 0 after 0 usecs<br>[    9.155358] calling  crc32c_mod_init+0x0&#x2F;0x30 @ 1<br>[    9.164410] initcall crc32c_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.176773] calling  crct10dif_mod_init+0x0&#x2F;0x30 @ 1<br>[    9.186275] initcall crct10dif_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.199083] calling  lzo_mod_init+0x0&#x2F;0x60 @ 1<br>[    9.207725] initcall lzo_mod_init+0x0&#x2F;0x60 returned 0 after 0 usecs<br>[    9.219566] calling  lzorle_mod_init+0x0&#x2F;0x58 @ 1<br>[    9.228681] initcall lzorle_mod_init+0x0&#x2F;0x58 returned 0 after 0 usecs<br>[    9.241075] calling  drbg_init+0x0&#x2F;0xb0 @ 1<br>[    9.251812] initcall drbg_init+0x0&#x2F;0xb0 returned 0 after 0 usecs<br>[    9.263266] calling  ghash_mod_init+0x0&#x2F;0x30 @ 1<br>[    9.272180] initcall ghash_mod_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.284371] calling  crypto_ofb_module_init+0x0&#x2F;0x30 @ 1<br>[    9.294502] initcall crypto_ofb_module_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.308052] calling  curve25519_init+0x0&#x2F;0x30 @ 1<br>[    9.317235] initcall curve25519_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.329627] calling  ecdh_init+0x0&#x2F;0xa8 @ 1<br>[    9.338188] initcall ecdh_init+0x0&#x2F;0xa8 returned 0 after 0 usecs<br>[    9.349618] calling  init_bio+0x0&#x2F;0xe8 @ 1<br>[    9.409020] initcall init_bio+0x0&#x2F;0xe8 returned 0 after 48000 usecs<br>[    9.420984] calling  blk_ioc_init+0x0&#x2F;0x50 @ 1<br>[    9.444211] initcall blk_ioc_init+0x0&#x2F;0x50 returned 0 after 12000 usecs<br>[    9.456770] calling  blk_mq_init+0x0&#x2F;0x168 @ 1<br>[    9.465480] initcall blk_mq_init+0x0&#x2F;0x168 returned 0 after 0 usecs<br>[    9.477353] calling  genhd_device_init+0x0&#x2F;0x78 @ 1<br>[    9.503938] initcall genhd_device_init+0x0&#x2F;0x78 returned 0 after 16000 usecs<br>[    9.517380] calling  io_wq_init+0x0&#x2F;0x50 @ 1<br>[    9.525801] initcall io_wq_init+0x0&#x2F;0x50 returned 0 after 0 usecs<br>[    9.537447] calling  sg_pool_init+0x0&#x2F;0xf0 @ 1<br>[    9.587010] initcall sg_pool_init+0x0&#x2F;0xf0 returned 0 after 40000 usecs<br>[    9.599677] calling  irq_poll_setup+0x0&#x2F;0xb0 @ 1<br>[    9.608955] initcall irq_poll_setup+0x0&#x2F;0xb0 returned 0 after 0 usecs<br>[    9.621242] calling  gpiolib_debugfs_init+0x0&#x2F;0x48 @ 1<br>[    9.631441] initcall gpiolib_debugfs_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    9.644723] calling  pwm_debugfs_init+0x0&#x2F;0x48 @ 1<br>[    9.654481] initcall pwm_debugfs_init+0x0&#x2F;0x48 returned 0 after 0 usecs<br>[    9.667110] calling  pwm_sysfs_init+0x0&#x2F;0x30 @ 1<br>[    9.676351] initcall pwm_sysfs_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.688729] calling  pci_slot_init+0x0&#x2F;0x68 @ 1<br>[    9.698580] initcall pci_slot_init+0x0&#x2F;0x68 returned 0 after 0 usecs<br>[    9.710653] calling  xgene_pcie_msi_init+0x0&#x2F;0x30 @ 1<br>[    9.721607] initcall xgene_pcie_msi_init+0x0&#x2F;0x30 returned 0 after 0 usecs<br>[    9.734737] calling  fbmem_init+0x0&#x2F;0xa8 @ 1<br>[    9.744937] initcall fbmem_init+0x0&#x2F;0xa8 returned 0 after 4000 usecs<br>[    9.757147] calling  scan_for_dmi_ipmi+0x0&#x2F;0x2b8 @ 1<br>[    9.771330] initcall scan_for_dmi_ipmi+0x0&#x2F;0x2b8 returned 0 after 4000 usecs<br>[    9.784830] calling  acpi_init+0x0&#x2F;0x160 @ 1<br>[    9.797327] ACPI: Added _OSI(Module Device)<br>[    9.805333] ACPI: Added _OSI(Processor Device)<br>[    9.813772] ACPI: Added _OSI(3.0 _SCP Extensions)<br>[    9.822636] ACPI: Added _OSI(Processor Aggregator Device)<br>[   10.050269] ACPI: 1 ACPI AML tables successfully acquired and loaded<br>[   10.140099] ACPI: Interpreter enabled<br>[   10.147330] ACPI: Using GIC for interrupt routing<br>[   10.157348] ACPI: MCFG table detected, 1 entries<br>[   10.170048] sdei: SDEIv1.0 (0x0) detected in firmware.<br>[   10.196083] probe of sdei.0 returned 0 after 24000 usecs<br>INFO:    Enable 103 intr for NMI<br>[   10.212291] probe of agdi.0 returned 0 after 4000 usecs<br>[   11.614316] probe of ARMH0011:00:0 returned 0 after 0 usecs<br>[   11.626971] probe of ARMH0011:00:0.0 returned 0 after 0 usecs<br>[   11.638975] ARMH0011:00: ttyAMA0 at MMIO 0x2a400000 (irq &#x3D; 14, base_baud &#x3D; 0) is a SBSA<br>[   11.655178] printk: console [ttyAMA0] enabled<br>[   11.668631] printk: bootconsole [pl11] disabled</p>
]]></content>
  </entry>
  <entry>
    <title>The Llama 3 Herd of Models——论文翻译</title>
    <url>/posts/538b6f3e/</url>
    <content><![CDATA[<p>Llama 3 模型群 —— Llama 团队，Meta 的 AI 分支</p>
<p>现代人工智能（AI）系统的核心驱动力是基础模型。本文介绍了一组名为 Llama 3 的全新基础模型系列。这是一群原生支持多语言能力、编程、推理以及工具使用的语言模型。我们最大的模型是一个拥有 4050 亿参数和最多可达 12.8 万令牌上下文窗口的密集型 Transformer。本文详细展示了 Llama 3 的大规模实证评估。我们发现，Llama 3 在众多任务上提供了可与顶尖语言模型如 GPT-4 相媲美的质量表现。我们公开发布了 Llama 3，包括预训练和后训练版本的 4050 亿参数语言模型，以及我们的 Llama Guard 3 模型，用于输入和输出的安全保障。</p>
<p>此外，本文还展示了我们通过组合方法将图像、视频和语音能力融入 Llama 3 的实验结果。我们观察到，这种方法在图像、视频和语音识别任务上与最先进水平竞争表现优异。然而，这些融合了多媒体能力的模型目前尚未广泛发布，因为它们仍在开发阶段。</p>
<h3 id="1-引言"><a href="#1-引言" class="headerlink" title="1 引言"></a>1 引言</h3><p>基础模型是指那些通用的语言、视觉、语音或其他模态的模型，旨在支撑广泛的人工智能任务。它们构成了许多现代AI系统的基石。</p>
<p>现代基础模型的发展历经两大核心阶段：(1) 预训练阶段，模型通过大规模数据集进行训练，采用诸如下一个词预测或图片描述等直接任务；(2) 后训练阶段，模型被微调以遵循指令、与人类偏好对齐及提升特定能力，例如编程和推理。</p>
<p>本文介绍了一组新的语言基础模型——Llama 3系列。Llama 3模型群原生支持多语言、编程、推理及工具运用能力。其中最大的模型是一个密集型Transformer架构，拥有4050亿参数，能在长达12.8万个令牌的上下文窗口中处理信息。模型群的每个成员在表1中列出。本文所展示的所有成果均基于Llama 3.1模型，为简洁起见，我们将统一简称其为Llama 3。</p>
<p>我们认为，高质量基础模型的开发有三个关键要素：数据、规模以及复杂度管理。在开发过程中，我们致力于针对这三个要素进行优化：</p>
<ul>
<li><p><strong>数据</strong>：相较于Llama的早期版本（Touvron等人，2023a,b），我们在预训练和后训练中使用的数据量和质量都有所提升。这些改进包括开发更加细致的预处理和精选管道以优化预训练数据，以及建立更严格的品质保证和过滤方法来处理后训练数据。Llama 3的预训练基于约1.5万亿个多语言令牌的数据集，相比之下，Llama 2使用的数据集为1.8万亿令牌。</p>
</li>
<li><p><strong>规模</strong>: 我们在远超以往Llama模型的规模上进行了训练：我们的旗舰语言模型预训练消耗了大约3.8×10^25次浮点运算（FLOPs），几乎是Llama 2最大版本的近50倍。具体而言，我们对一个拥有4050亿可训练参数的旗舰模型进行了预训练，使用了1.56万亿文本令牌的数据集。正如基础模型的规模法则所预期的那样，我们的旗舰模型在相同的训练流程下超越了规模较小的模型。尽管规模法则表明，对于我们的训练预算，旗舰模型大约处于计算最优的规模，但我们对小型模型的训练时间也远超计算最优时长。由此产生的模型在相同的推理预算下，表现优于计算最优模型。我们还利用旗舰模型在后训练阶段进一步提升了这些小型模型的质量。</p>
</li>
<li><p><strong>管理复杂性</strong>: 我们在设计选择上力求最大化模型开发过程的可扩展性。例如，我们选择了标准的密集型Transformer模型架构（Vaswani等人，2017年），仅做轻微调整，而不是混合专家模型（MoE，Shazeer等人，2017年），以此来最大限度地提高训练稳定性。同样地，我们采用了相对简单的后训练流程，基于监督微调（SFT）、拒绝采样（RS）和直接偏好优化（DPO，Rafailov等人，2023年），而非采用更复杂的强化学习算法（如Ouyang等人，2022年；Schulman等人，2017年），后者往往稳定性较差且难以规模化。</p>
</li>
</ul>
<p>我们的工作成果是Llama 3：一组包含三个多语言模型的“羊驼群”，分别具有80亿、700亿和4050亿个参数。我们对Llama 3在涵盖广泛语言理解任务的关键基准数据集上的性能进行了评估。此外，我们还进行了深入的人类评估，将Llama 3与竞争对手的模型进行比较。旗舰Llama 3模型在关键基准上的性能概览见表2。实验评估表明，我们的旗舰模型在多种任务上与诸如GPT-4（OpenAI，2023a）等领先语言模型的表现相当，并接近达到当前技术前沿。我们的小型模型也是同类最佳，优于具有相似参数数量的替代模型（Bai等人，2023；Jiang等人，2023）。Llama 3相比其前身在有用性和无害性之间取得了更好的平衡（Touvron等人，2023b）。我们将在第5.4节详细介绍Llama 3的安全性分析。</p>
<p>我们正根据更新版的Llama 3社区许可协议公开发布所有三个Llama 3模型；详情请见<a href="https://llama.meta.com.这包括我们4050亿参数语言模型的预训练和后训练版本,以及输入和输出安全性的llama/">https://llama.meta.com。这包括我们4050亿参数语言模型的预训练和后训练版本，以及输入和输出安全性的Llama</a> Guard模型新版本（Inan等人，2023）。我们希望通过旗舰模型的开放发布激发研究界的创新浪潮，并加速负责任地迈向人工智能（AGI）总体发展的道路。</p>
<p>作为Llama 3开发过程的一部分，我们还开发了模型的多模态扩展，使模型具备图像识别、视频识别和语音理解的能力。这些多模态模型仍在积极开发中，尚未准备发布。除了语言建模的结果外，本文还展示了我们使用这些多模态模型的初步实验结果。</p>
<h3 id="2-总体概述"><a href="#2-总体概述" class="headerlink" title="2 总体概述"></a>2 总体概述</h3><p>Llama 3的模型架构如图1所示。我们Llama 3语言模型的开发包含两个主要阶段：</p>
<h4 id="语言模型预训练"><a href="#语言模型预训练" class="headerlink" title="语言模型预训练"></a>语言模型预训练</h4><p>我们首先将大型多语言文本语料库转换为离散的令牌，并在此基础上预训练一个大型语言模型（LLM），以执行下一个令牌的预测任务。在语言模型预训练阶段，模型学习语言结构，并从其“阅读”的文本中获取大量关于世界的知识。为了有效实现这一目标，预训练是在大规模数据上进行的：我们使用8K令牌的上下文窗口，在15.6万亿个令牌的数据集上预训练一个拥有4050亿参数的模型。这一标准预训练阶段之后是持续预训练阶段，将支持的上下文窗口扩大到128K令牌。详情请参阅第3节。</p>
<h4 id="语言模型后训练"><a href="#语言模型后训练" class="headerlink" title="语言模型后训练"></a>语言模型后训练</h4><p>预训练后的语言模型虽然对语言有了丰富的理解，但还不能遵循指令或像我们期望的助手那样行为。我们通过几轮人类反馈对其校准，每轮涉及在指令调优数据上的监督微调（SFT）和直接偏好优化（DPO，Rafailov等人，2024）。在这一后训练阶段，我们还整合了新能力，比如工具使用，并在编码、推理等领域观察到了显著的进步。详情请见第4节。最后，安全缓解措施也在后训练阶段被整合进模型中，具体细节在第5.4节描述。</p>
<p>最终产生的模型具备一系列丰富的能力。它们能够至少用八种语言回答问题、编写高质量的代码、解决复杂的推理问题，并能开箱即用或以零样本方式使用工具。</p>
<p>我们还进行了实验，通过一种组合方法向Llama 3添加了图像、视频和语音处理能力。我们研究的方法包括图28中所示的三个额外阶段：</p>
<h4 id="多模态编码器预训练"><a href="#多模态编码器预训练" class="headerlink" title="多模态编码器预训练"></a>多模态编码器预训练</h4><p>我们分别为图像和语音训练独立的编码器。我们的图像编码器在大量的图像-文本对上进行训练，这教会模型视觉内容与其自然语言描述之间的关系。语音编码器则采用自监督方法进行训练，该方法会遮蔽语音输入的部分内容，并尝试通过离散令牌表示来重建被遮蔽的部分，从而使模型学习到语音信号的结构。图像编码器的详细信息请参见第7节，语音编码器的详细信息请参见第8节。</p>
<h4 id="视觉适配器训练"><a href="#视觉适配器训练" class="headerlink" title="视觉适配器训练"></a>视觉适配器训练</h4><p>我们训练了一个适配器，将预训练的图像编码器集成到预训练的语言模型中。该适配器包含一系列交叉注意力层，用于将图像编码器的表示馈入语言模型。适配器在文本-图像对上进行训练，这使得图像表示与语言表示对齐。在适配器训练期间，我们也会更新图像编码器的参数，但有意不更新语言模型的参数。我们还在图像适配器的基础上，使用配对的视频-文本数据训练了一个视频适配器，使模型能够在帧间聚合信息。更多细节请参阅第7节。</p>
<h4 id="语音适配器训练"><a href="#语音适配器训练" class="headerlink" title="语音适配器训练"></a>语音适配器训练</h4><p>最后，我们通过一个适配器将语音编码器集成到模型中，该适配器将语音编码转换为可以直接输入到微调过的语言模型中的令牌表示。适配器和编码器的参数在监督微调阶段联合更新，以实现高质量的语音理解能力。在语音适配器训练期间，我们不对语言模型进行更改。我们还集成了一个文本转语音系统。详细信息请参见第8节。</p>
<p>我们的多模态实验产生了能够识别图像和视频内容，并通过语音接口支持交互的模型。这些模型仍处于开发阶段，尚未准备好发布。</p>
<h3 id="3-预训练"><a href="#3-预训练" class="headerlink" title="3 预训练"></a>3 预训练</h3><p>语言模型预训练包括以下步骤：(1) 大规模训练语料库的策划与过滤，(2) 模型架构的开发及确定模型大小的相应规模法则，(3) 大规模高效预训练技术的开发，以及(4) 预训练方案的制定。下面我们将逐一介绍这些组成部分。</p>
<h4 id="3-1-预训练数据"><a href="#3-1-预训练数据" class="headerlink" title="3.1 预训练数据"></a>3.1 预训练数据</h4><p>我们从包含截至2023年底知识的多种数据源创建语言模型预训练数据集。对每个数据源应用多种去重方法和数据清洗机制，以获得高质量的令牌。我们移除含有大量个人可识别信息(PII)的领域，以及已知含有成人内容的领域。</p>
<h4 id="3-1-1-网络数据策划"><a href="#3-1-1-网络数据策划" class="headerlink" title="3.1.1 网络数据策划"></a>3.1.1 网络数据策划</h4><p>我们使用的大部分数据来源于网络，以下是我们的数据清洗流程。</p>
<h5 id="PII和安全过滤"><a href="#PII和安全过滤" class="headerlink" title="PII和安全过滤"></a>PII和安全过滤</h5><p>除其他缓解措施外，我们实施了旨在移除可能含有不安全内容或大量PII的网站数据的过滤器，移除按照Meta安全标准被评为有害的域名，以及已知含有成人内容的域名。</p>
<h5 id="文本提取与清洗"><a href="#文本提取与清洗" class="headerlink" title="文本提取与清洗"></a>文本提取与清洗</h5><p>我们处理非截断网页文档的原始HTML内容，以提取高质量且多样化的文本。为此，我们构建了一个自定义解析器，用于提取HTML内容，并优化去除模板内容的精确度和内容召回率。我们通过人工评估来验证解析器的质量，将其与优化文章类内容的第三方HTML解析器进行对比，结果表现良好。我们仔细处理含有数学和代码内容的HTML页面，以保留这类内容的结构。我们保留图像alt属性文本，因为在数学内容常以预渲染图像形式出现时，数学内容也会在alt属性中提供。我们实验性地评估了不同的清洗配置，发现相比于纯文本，Markdown格式对主要在网页数据上训练的模型性能不利，因此我们移除了所有Markdown标记。</p>
<h5 id="去重"><a href="#去重" class="headerlink" title="去重"></a>去重</h5><p>我们在URL、文档和行级别上应用了几轮去重：</p>
<ul>
<li>URL级去重：在整个数据集中执行URL级别的去重，为每个URL对应的页面保留最新版本。</li>
<li>文档级去重：在整个数据集上执行全局MinHash（Broder, 1997）去重，移除近似重复的文档。</li>
<li>行级去重：执行类似于ccNet（Wenzek等人，2019）的激进行列级去重。移除在每个3000万文档桶中出现超过6次的行。尽管手动定性分析显示，行级去重不仅去除了来自各网站的剩余模板内容（如导航菜单、Cookie警告），也可能移除了频繁出现的高质量文本，但我们的实证评估显示了显著的性能提升。</li>
</ul>
<h5 id="启发式过滤"><a href="#启发式过滤" class="headerlink" title="启发式过滤"></a>启发式过滤</h5><p>我们开发启发式方法来删除更多低质量文档、异常值和重复内容过多的文档。一些启发式例子包括：</p>
<ul>
<li>我们采用重复n-gram覆盖率比例（Rae等人，2021）来删除包含重复内容如日志或错误信息的行。这些行可能非常长且独特，因此无法通过行去重过滤。</li>
<li>我们使用“脏词”计数（Raffel等人，2020）来过滤不受域名屏蔽列表覆盖的成人网站。</li>
<li>我们使用令牌分布的Kullback-Leibler散度来过滤与训练语料库分布相比含有过多异常令牌的文档。</li>
</ul>
<h5 id="基于模型的质量过滤"><a href="#基于模型的质量过滤" class="headerlink" title="基于模型的质量过滤"></a>基于模型的质量过滤</h5><p>我们进一步尝试应用多种基于模型的质量分类器来筛选高质量的文本片段。这包括使用快速分类器，如fasttext（Joulin等人，2017年），该分类器被训练以识别给定文本是否会被维基百科引用（Touvron等人，2023a），以及计算密集型的Roberta-based分类器（Liu等人，2019a），这些分类器在Llama 2的预测数据上进行训练。为了基于Llama 2训练一个质量分类器，我们创建了一个经过清理的网页文档训练集，并描述了质量要求，然后指导Llama 2的聊天模型判断文档是否满足这些要求。出于效率考虑，我们使用DistilRoberta（Sanh等人，2019年）为每个文档生成质量分数。我们通过实验评估了不同质量过滤配置的有效性。</p>
<h5 id="代码与推理数据处理"><a href="#代码与推理数据处理" class="headerlink" title="代码与推理数据处理"></a>代码与推理数据处理</h5><p>类似于DeepSeek-AI等（2024年）的工作，我们构建了针对特定领域的管道，用于提取包含代码和数学相关内容的网页。具体而言，无论是代码还是推理分类器，都是基于DistilledRoberta模型，该模型在由Llama 2标注的网络数据上进行训练。与上述通用质量分类器不同，我们进行了提示调整，以便针对性地搜索包含数学推导、STEM领域中的推理以及自然语言中穿插的代码的网页。鉴于代码和数学的令牌分布与自然语言有显著差异，这些管道实现了领域特定的HTML抽取、定制的文本特征和过滤启发式规则。</p>
<h5 id="多语言数据处理"><a href="#多语言数据处理" class="headerlink" title="多语言数据处理"></a>多语言数据处理</h5><p>与上述针对英语的数据处理流程相仿，我们也实施了过滤机制，以移除可能包含个人身份信息（PII）或不安全内容的网站数据。我们的多语言文本处理管道具备以下独特特性：</p>
<p>• 利用基于fasttext的语言识别模型，将文档归类到176种语言中。<br>• 针对每种语言的数据，分别在文档级别和行级别执行去重复操作。<br>• 应用针对各语言的特定启发式规则及基于模型的过滤器，以排除低质量文档。</p>
<p>此外，我们采用基于多语言Llama 2的分类器对多语言文档进行质量排序，确保优先考虑高质量内容。通过实验确定预训练中使用的多语言令牌数量，以平衡模型在英语和多语言基准测试上的性能表现。</p>
<h4 id="3-1-2-数据组合的确定"><a href="#3-1-2-数据组合的确定" class="headerlink" title="3.1.2 数据组合的确定"></a>3.1.2 数据组合的确定</h4><p>为了获得高质量的语言模型，仔细决定预训练数据混合中不同数据来源的比例至关重要。我们确定此数据混合的主要工具是知识分类和规模法则实验。</p>
<p><strong>知识分类。</strong> 我们开发了一种分类器，用于分类网络数据中所含信息的类型，以便更有效地确定数据组合。我们利用该分类器对网络上过度代表的数据类别进行下采样，例如艺术与娱乐类内容。</p>
<p><strong>数据混合的规模法则。</strong> 为确定最佳数据组合，我们执行规模法则实验，即在不同的数据组合上训练多个小型模型，并以此预测大型模型在该组合上的性能（参见第3.2.1节）。我们为不同的数据组合多次重复这一过程，以选择新的数据组合候选。随后，在这个候选数据组合上训练一个更大的模型，并评估其在几个关键基准测试上的表现。</p>
<p><strong>数据组合概述。</strong> 最终的数据组合大约包含50%的一般知识令牌，25%的数学与推理令牌，17%的代码令牌，以及8%的多语言令牌。</p>
<h4 id="3-1-3-数据退火"><a href="#3-1-3-数据退火" class="headerlink" title="3.1.3 数据退火"></a>3.1.3 数据退火</h4><p>实验上，我们发现对少量高质量的代码和数学数据进行退火（参见第3.4.3节）可以提升预训练模型在关键基准上的性能。类似于Li等人（2024b），我们在特定领域内对高质量数据进行上采样的数据混合上执行退火。我们的退火数据中不包含任何来自常用基准测试的训练集。这使我们能够评估Llama 3真正的少量样本学习能力和跨领域的泛化能力。</p>
<p>效仿OpenAI（2023a），我们在GSM8k（Cobbe等人，2021）和MATH（Hendrycks等人，2021b）训练集上进行退火，并评估退火的效果。我们发现，退火使预训练的Llama 3 8B模型在GSM8k和MATH验证集上的性能分别提高了24.0%和6.4%。然而，对于405B模型，改进微乎其微，表明我们的旗舰模型拥有强大的上下文内学习和推理能力，不需要特定领域的训练样本即可获得强劲的性能。</p>
<p><strong>利用退火评估数据质量。</strong> 类似于Blakeney等人（2024），我们发现退火使我们能够评判小规模领域特定数据集的价值。我们通过线性地将一个已训练50%的Llama 3 8B模型的学习率退火至0，处理400亿个令牌，以此来衡量这类数据集的价值。在这些实验中，新数据集被赋予30%的权重，剩余70%的权重分配给默认数据混合。相比为每个小数据集执行规模法则实验，使用退火评估新数据源更为高效。</p>
<h3 id="3-2-模型架构"><a href="#3-2-模型架构" class="headerlink" title="3.2 模型架构"></a>3.2 模型架构</h3><p>Llama 3采用了标准的稠密Transformer架构（Vaswani等人，2017年）。就模型架构而言，它与Llama及Llama 2（Touvron等人，2023a，b）并无显著偏离；我们的性能提升主要得益于数据质量和多样性的改进，以及训练规模的扩大。</p>
<p>相较于Llama 3，我们做出了一些较小的修改：</p>
<p>• 我们采用了分组查询注意力（Grouped Query Attention，简称GQA；Ainslie等人，2023年），并设置了8个键值头，以提高推理速度并减少解码期间键值缓存的大小。<br>• 我们使用了一种注意力掩码，防止序列中不同文档之间的自注意力。我们发现在标准预训练过程中，这一改动的影响有限，但在针对非常长序列的持续预训练中，我们发现它非常重要。</p>
]]></content>
  </entry>
</search>
